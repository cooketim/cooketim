<UserControl 
  x:Class="TimsTool.Tree.PrisonCourtRegisterSubscriptionControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:vm="clr-namespace:Models.ViewModels;assembly=Models"
  xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:b="clr-namespace:TimsTool.Tree.Behaviors"
  xmlns:bi="clr-namespace:TimsTool.Tree.Binding"
  xmlns:bv="clr-namespace:TimsTool.Tree.BindingValidation"
  xmlns:e="clr-namespace:TimsTool.Tree.Extended"
  xmlns:d="clr-namespace:DataLib;assembly=DataLib"  
  FocusManager.FocusedElement="{Binding ElementName=searchTextBox}"
  >
    <DockPanel>
        <Grid Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10,0,0,0">
                <Label Margin="0,0,0,5">Published</Label>
                <CheckBox Margin="0,0,0,5" Width="15" Height="15" Name="TickPublished" IsChecked="True"/>
                <Label Margin="10,0,0,5">Revisions</Label>
                <CheckBox Margin="0,0,0,5" Width="15" Height="15" Name="TickRevisions" IsChecked="True"/>
                <Label Margin="10,0,0,5">Draft</Label>
                <CheckBox Margin="0,0,0,5" Width="15" Height="15" Name="TickDraft" IsChecked="True"/>
            </StackPanel>
            <Grid Background="Transparent" Grid.Row="1">
                <Grid.Resources>
                    <BooleanToVisibilityConverter x:Key="BoolToVis"/>
                    <bi:EnumBooleanConverter x:Key="enumBooleanConverter" />
                    <bi:EnumStringConverter x:Key="enumStringConverter" />

                    <ControlTemplate x:Key="ValidationTemplate">
                        <DockPanel>
                            <TextBlock Foreground="Red" FontSize="20" Margin="0,0,15,0">!</TextBlock>
                            <AdornedElementPlaceholder/>
                        </DockPanel>
                    </ControlTemplate>
                    <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="Foreground" Value="Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <e:ColumnDefinitionExtended Width="400" Visible="{Binding IsChecked, ElementName=TickPublished, Mode=OneWay}"/>
                    <e:ColumnDefinitionExtended Width="5" Visible="{Binding IsChecked, ElementName=TickPublished, Mode=OneWay}"/>
                    <e:ColumnDefinitionExtended Width="400" Visible="{Binding IsChecked, ElementName=TickRevisions, Mode=OneWay}"/>
                    <e:ColumnDefinitionExtended Width="5" Visible="{Binding IsChecked, ElementName=TickRevisions, Mode=OneWay}"/>
                    <e:ColumnDefinitionExtended Width="400" Visible="{Binding IsChecked, ElementName=TickDraft, Mode=OneWay}"/>
                    <e:ColumnDefinitionExtended Width="5" Visible="{Binding IsChecked, ElementName=TickDraft, Mode=OneWay}"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"  />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Rectangle Grid.Row="0" Grid.Column="0" Fill="LightGray" />
                <TextBlock Text="Published" FontSize="16" FontWeight="SemiBold" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.Column="0" />
                <Rectangle Grid.Row="0" Grid.Column="2" Fill="LightGray" />
                <TextBlock Text="Revisions" FontSize="16" FontWeight="SemiBold" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.Column="2" />
                <Rectangle Grid.Row="0" Grid.Column="4" Fill="LightGray" />
                <TextBlock Text="Draft" FontSize="16" FontWeight="SemiBold" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.Column="4" />
                <AdornerDecorator x:Name="PART_DragDropAdorner" Grid.ColumnSpan="6" Grid.RowSpan="2" />

                <!-- SUBSCRIPTIONS TREE PUBLISHED -->
                <TreeView Name="tvPrisonCourtRegisterSubscriptions"
                  Grid.Column="0"
                  Grid.Row="1"
                  Width="Auto" Background="#FFFFFFFF" BorderBrush="#FFFFFFFF" Foreground="#FFFFFFFF"
                  AllowDrop="True" 
                  ItemsSource="{Binding PrisonCourtRegisterSubscriptionsPublished}"
                  MouseUp="TreeView_MouseUp">

                    <i:Interaction.Behaviors>
                        <b:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
                    </i:Interaction.Behaviors>

                    <TreeView.ItemContainerStyle>
                        <!-- 
                This Style binds a TreeViewItem to a TreeViewItemViewModel. 
                -->
                        <Style TargetType="{x:Type TreeViewItem}">
                            <!-- <EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
                        
                    <EventSetter Event="TreeViewItem.DragOver" Handler="TreeViewItem_DragOver"/>
                    <EventSetter Event="TreeViewItem.Drop" Handler="TreeViewItem_Drop"/>
                    <EventSetter Event="TreeViewItem.MouseMove" Handler="TreeViewItem_MouseMove"/>
                    <EventSetter Event="TreeViewItem.PreviewMouseLeftButtonDown" Handler="TreeViewItem_PreviewMouseLeftButtonDown"/>-->

                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <!--<Setter Property="AllowDrop" Value="True" />-->
                            <Setter Property="Margin" Value="3,1,0,1" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.Resources>

                        <bi:TreeModelBindingProxy x:Key="Proxy" Data="{Binding}" />

                        <HierarchicalDataTemplate DataType="{x:Type vm:NowSubscriptionTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Add New Subscription" Click="MenuItem_AddNewNowSubscription_Click" CommandParameter="prisonCourtRegister" />
                                        <MenuItem Header="Create Draft Subscription" Click="MenuItem_DraftSubscription_Click"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,0" Source="Images\NowSubscription.png" />
                                <TextBlock x:Name="label" Text="{Binding Path=NowSubscriptionViewModel.Name}" FontSize="15"/>
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=NowSubscriptionViewModel.IsDeleted, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\NowSubscriptionDeleted.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=NowSubscriptionViewModel.IsNowSubscriptionPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\NowSubscriptionPublishedPending.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>
                <GridSplitter ResizeDirection="Columns" 
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    ResizeBehavior="PreviousAndNext" Grid.Column="1" Grid.Row="1" />

                <!-- SUBSCRIPTIONS TREE REVISIONS -->
                <TreeView Name="tvPrisonCourtRegisterSubscriptionsRevisions"
                  Grid.Column="2"
                  Grid.Row="1"
                  Width="Auto" Background="#FFFFFFFF" BorderBrush="#FFFFFFFF" Foreground="#FFFFFFFF"
                  AllowDrop="True" 
                  ItemsSource="{Binding PrisonCourtRegisterSubscriptionsRevision}"
                  MouseUp="TreeView_MouseUp">
                    <i:Interaction.Behaviors>
                        <b:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
                    </i:Interaction.Behaviors>

                    <TreeView.ItemContainerStyle>
                        <!-- 
                This Style binds a TreeViewItem to a TreeViewItemViewModel. 
                -->
                        <Style TargetType="{x:Type TreeViewItem}">
                            <!-- <EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
                        
                    <EventSetter Event="TreeViewItem.DragOver" Handler="TreeViewItem_DragOver"/>
                    <EventSetter Event="TreeViewItem.Drop" Handler="TreeViewItem_Drop"/>
                    <EventSetter Event="TreeViewItem.MouseMove" Handler="TreeViewItem_MouseMove"/>
                    <EventSetter Event="TreeViewItem.PreviewMouseLeftButtonDown" Handler="TreeViewItem_PreviewMouseLeftButtonDown"/>-->

                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <!--<Setter Property="AllowDrop" Value="True" />-->
                            <Setter Property="Margin" Value="3,1,0,1" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.Resources>

                        <bi:TreeModelBindingProxy x:Key="Proxy" Data="{Binding}" />

                        <HierarchicalDataTemplate DataType="{x:Type vm:NowSubscriptionRevisionTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu Visibility="{Binding Source={StaticResource Proxy}, Path=Data.RevisionsDeleteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <MenuItem Header="Delete Revisions" Command="{Binding Source={StaticResource Proxy}, Path=Data.DeleteRevisionsCommand}"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image x:Name="icon" Width="22" Height="22" Margin="3,0" Source="Images\Published.png" />
                                <TextBlock x:Name="label" Text="{Binding Path=Label}" />
                            </StackPanel>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:NowSubscriptionTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,0" Source="Images\NowSubscription.png" />
                                <TextBlock x:Name="label" Text="{Binding Path=NowSubscriptionViewModel.Name}" FontSize="15"/>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>
                <GridSplitter ResizeDirection="Columns" 
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    ResizeBehavior="PreviousAndNext" Grid.Column="3" Grid.Row="1" />

                <!-- SUBSCRIPTIONS TREE DRAFT -->
                <TreeView Name="tvPrisonCourtRegisterSubscriptionsDraft"
                  Grid.Column="4"
                  Grid.Row="1"
                  Width="Auto" Background="#FFFFFFFF" BorderBrush="#FFFFFFFF" Foreground="#FFFFFFFF"
                  AllowDrop="True" 
                  ItemsSource="{Binding PrisonCourtRegisterSubscriptionsDraft}"
                  MouseUp="TreeView_MouseUp">
                    <i:Interaction.Behaviors>
                        <b:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
                    </i:Interaction.Behaviors>

                    <TreeView.ItemContainerStyle>
                        <!-- 
                This Style binds a TreeViewItem to a TreeViewItemViewModel. 
                -->
                        <Style TargetType="{x:Type TreeViewItem}">
                            <!-- <EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
                        
                    <EventSetter Event="TreeViewItem.DragOver" Handler="TreeViewItem_DragOver"/>
                    <EventSetter Event="TreeViewItem.Drop" Handler="TreeViewItem_Drop"/>
                    <EventSetter Event="TreeViewItem.MouseMove" Handler="TreeViewItem_MouseMove"/>
                    <EventSetter Event="TreeViewItem.PreviewMouseLeftButtonDown" Handler="TreeViewItem_PreviewMouseLeftButtonDown"/>-->

                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <!--<Setter Property="AllowDrop" Value="True" />-->
                            <Setter Property="Margin" Value="3,1,0,1" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.Resources>

                        <bi:TreeModelBindingProxy x:Key="Proxy" Data="{Binding}" />

                        <HierarchicalDataTemplate DataType="{x:Type vm:NowSubscriptionTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Add New Subscription" Click="MenuItem_AddNewNowSubscription_Click" CommandParameter="prisonCourtRegister" />
                                        <MenuItem Header="Add New Child Subscription" Command="{Binding Source={StaticResource Proxy}, Path=Data.AddNewChildNowSubscriptionCommand}"/>
                                        <Separator/>
                                        <MenuItem Header="Publish Draft Subscription" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.NOWSubscriptionPublishVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Click="MenuItem_PublishSubscription_Click" />
                                        <Separator/>
                                        <MenuItem Header="Set As Deleted" Command="{Binding Source={StaticResource Proxy}, Path=Data.SetDeleteNowSubscriptionCommand}"/>
                                        <MenuItem Header="Delete Draft Subscription" Command="{Binding Source={StaticResource Proxy}, Path=Data.DeleteNowSubscriptionCommand}"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,0" Source="Images\NowSubscription.png" />
                                <TextBlock x:Name="label" Text="{Binding Path=NowSubscriptionViewModel.Name}" FontSize="15"/>
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=NowSubscriptionViewModel.IsDeleted, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\NowSubscriptionDeleted.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="red"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>
                <GridSplitter ResizeDirection="Columns" 
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    ResizeBehavior="PreviousAndNext" Grid.Column="5" Grid.Row="1" />


                <ScrollViewer Grid.Column="6" Grid.Row="0" Grid.RowSpan="2" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Visibility="{Binding SelectedNowSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                    <StackPanel Grid.Column="6" Grid.Row="0" Grid.RowSpan="2" Visibility="{Binding SelectedNowSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Name="nowSubscription" >
                        <Label  Height="30" Content="Prison Register Subscription" FontWeight="Bold" Background="LightGray" />
                        <Expander Header="Identifiers" IsExpanded="False">
                            <StackPanel Margin="10,5,0,0">
                                <StackPanel Orientation="Horizontal" Visibility="Visible">
                                    <Label Margin="0,5,0,5" Width="200" IsEnabled="{Binding Path=SelectedItem.NowSubscriptionViewModel.IsEnabled, Mode=OneWay}">Master Identifier</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="400" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.MasterUUID, Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Visibility="Visible">
                                    <Label Margin="0,5,0,5" Width="200" IsEnabled="{Binding Path=SelectedItem.NowSubscriptionViewModel.IsEnabled, Mode=OneWay}">Identifier</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="400" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.UUID, Mode=OneWay}" />
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                        <Separator Height="2"/>
                        <Expander Header="Prison Court Register Subscription Details" IsExpanded="True">
                            <StackPanel Margin="10,5,0,0">
                                <StackPanel IsEnabled="{Binding Path=SelectedItem.NowSubscriptionViewModel.IsEnabled, Mode=OneWay}">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Subscription Name</Label>
                                        <TextBox Name="NowSubscriptionNameTextBox" Margin="0,5,0,5" Width="500" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" Style="{StaticResource textBoxInError}">
                                            <TextBox.Text>
                                                <Binding Path="SelectedItem.NowSubscriptionViewModel.Name" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" >
                                                    <Binding.ValidationRules>
                                                        <bv:UniqueNOWSubscriptionNameRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>

                                    <!--Subscription Vocabulary-->
                                    <WrapPanel x:Name="subscriptionRulesApply" Margin="0,0,0,0">
                                        <Label Margin="0,5,0,5" Width="200">Apply Subscription Rules</Label>
                                        <CheckBox Margin="0,0,0,0" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.ApplySubscriptionRules, Mode=TwoWay}"/>
                                    </WrapPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.SubscriptionRulesVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Subscription Rules</Label>
                                        <WrapPanel x:Name="subscriptionRules1" Margin="0,0,0,0">
                                            <Label Margin="0,5,0,5" Width="180">Appeared by video link</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.AppearedByVideoLink, Mode=TwoWay}"/>
                                            <Label Margin="10,5,0,5" Width="220">Appeared in person</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.AppearedInPerson, Mode=TwoWay}"/>
                                            <Label Margin="10,5,0,5" Width="220">Any appearance</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.AnyAppearance, Mode=TwoWay}"/>
                                        </WrapPanel>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.SubscriptionRulesVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <WrapPanel x:Name="subscriptionRules2" Margin="0,0,0,0">
                                            <Label Margin="200,5,0,5" Width="180">Welsh court</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.WelshCourtHearing, Mode=TwoWay}"/>
                                            <Label Margin="10,5,0,5" Width="220">English court</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.EnglishCourtHearing, Mode=TwoWay}"/>
                                            <Label Margin="10,5,0,5" Width="220">Any court</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.AnyCourtHearing, Mode=TwoWay}"/>
                                        </WrapPanel>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.SubscriptionRulesVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <WrapPanel x:Name="subscriptionRules3" Margin="0,0,0,0">
                                            <Label Margin="200,5,0,5" Width="180">Defendant is a youth</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.YouthDefendant, Mode=TwoWay}"/>
                                            <Label Margin="10,5,0,5" Width="220">Defendant is an adult</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.AdultDefendant, Mode=TwoWay}"/>
                                            <Label Margin="10,5,0,5" Width="220">Defendant is an adult or a youth</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.AdultOrYouthDefendant, Mode=TwoWay}"/>
                                        </WrapPanel>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.SubscriptionRulesVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <WrapPanel x:Name="subscriptionRules4" Margin="0,0,0,0">
                                            <Label Margin="200,5,0,5" Width="180">In custody</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.InCustody, Mode=TwoWay}"/>
                                            <Label Margin="10,5,0,5" Width="220">Custody location is prison</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.CustodyLocationIsPrison, Mode=TwoWay}"/>
                                            <Label Margin="10,5,0,5" Width="220">Custody location is police</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.CustodyLocationIsPolice, Mode=TwoWay}"/>
                                            <Label Margin="10,5,0,5" Width="170">Ignore Custody</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.IgnoreCustody, Mode=TwoWay}"/>
                                        </WrapPanel>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.SubscriptionRulesVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <WrapPanel x:Name="subscriptionRules5" Margin="0,0,0,0">
                                            <Label Margin="200,5,0,5" Width="180">All non-custodial results</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.AllNonCustodialResults, Mode=TwoWay}"/>
                                            <Label Margin="10,5,0,5" Width="220">At least one non-custodial result</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.AtleastOneNonCustodialResult, Mode=TwoWay}"/>
                                            <Label Margin="10,5,0,5" Width="220">At least one custodial result</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.AtleastOneCustodialResult, Mode=TwoWay}"/>
                                            <Label Margin="10,5,0,5" Width="170">Ignore Results</Label>
                                            <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.IgnoreResults, Mode=TwoWay}"/>
                                        </WrapPanel>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.SubscriptionRulesVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="200,5,0,5" Width="200">Result definitions not ordered</Label>
                                        <ListView Margin="0,5,0,5" x:Name="NowExcludedResults"  
                                  ItemsSource="{Binding Path=SelectedItem.NowSubscriptionViewModel.ExcludedResults, Mode=OneWay}" 
                                  SelectedItem="{Binding SelectedNowExcludedResultValue, Mode=TwoWay}"
                                  VerticalContentAlignment="Top"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="Auto">
                                            <ListView.View>
                                                <GridView ColumnHeaderToolTip="Results Not Shared">
                                                    <GridViewColumn Header="Excluded Results Details" Width="500" DisplayMemberBinding="{Binding Path=ResultDisplay, Mode=OneWay}"/>
                                                </GridView>
                                            </ListView.View>
                                            <!--context  Menu-->
                                            <ListView.ContextMenu>
                                                <ContextMenu Name="ExcludedResultMenu" Visibility="{Binding Path=SelectedItem.NowSubscriptionViewModel.HasExcludedResultsContextActions, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                                    <MenuItem Header="Paste Result Definition" Visibility="{Binding Path=ResultDefinitionPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding PasteResultDefinitionCommand}" CommandParameter="Excluded"/>
                                                    <MenuItem Header="Delete Result Definition" Visibility="{Binding Path=SelectedItem.NowSubscriptionViewModel.HasExcludedResults, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding DeleteResultDefinitionCommand}" CommandParameter="Excluded"/>
                                                </ContextMenu>
                                            </ListView.ContextMenu>
                                        </ListView>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.SubscriptionRulesVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="200,5,0,5" Width="200">Ordered result definitions</Label>
                                        <ListView Margin="0,5,0,5" x:Name="NowIncludedResults"  
                                  ItemsSource="{Binding Path=SelectedItem.NowSubscriptionViewModel.IncludedResults, Mode=OneWay}" 
                                  SelectedItem="{Binding SelectedItem.NowSubscriptionViewModel.SelectedNowIncludedResultValue, Mode=TwoWay}"
                                  VerticalContentAlignment="Top"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="Auto">
                                            <ListView.View>
                                                <GridView ColumnHeaderToolTip="Results Shared">
                                                    <GridViewColumn Header="Included Result Definition Details" Width="500" DisplayMemberBinding="{Binding Path=ResultDisplay, Mode=OneWay}"/>
                                                </GridView>
                                            </ListView.View>
                                            <!--context  Menu-->
                                            <ListView.ContextMenu>
                                                <ContextMenu Name="IncludedResultMenu" Visibility="{Binding Path=SelectedItem.NowSubscriptionViewModel.HasIncludedResultsContextActions, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                                    <MenuItem Header="Paste Result Definition" Visibility="{Binding Path=ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding PasteResultPromptCommand}" CommandParameter="Included"/>
                                                    <MenuItem Header="Delete Result Definition" Visibility="{Binding Path=SelectedItem.NowSubscriptionViewModel.HasIncludedResults, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding DeleteResultDefinitionCommand}" CommandParameter="Included"/>
                                                </ContextMenu>
                                            </ListView.ContextMenu>
                                        </ListView>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.SubscriptionRulesVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="200,5,0,5" Width="200">Prompts not ordered</Label>
                                        <ListView Margin="0,5,0,5" x:Name="NowExcludedPrompts"  
                                  ItemsSource="{Binding Path=SelectedItem.NowSubscriptionViewModel.ExcludedPrompts, Mode=OneWay}" 
                                  SelectedItem="{Binding SelectedItem.NowSubscriptionViewModel.SelectedNowExcludedPromptValue, Mode=TwoWay}"
                                  VerticalContentAlignment="Top"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="Auto">
                                            <ListView.View>
                                                <GridView ColumnHeaderToolTip="Result Prompts Not Shared">
                                                    <GridViewColumn Header="Excluded Result Prompt Details" Width="500" DisplayMemberBinding="{Binding Path=ResultPromptDisplay, Mode=OneWay}"/>
                                                </GridView>
                                            </ListView.View>
                                            <!--context  Menu-->
                                            <ListView.ContextMenu>
                                                <ContextMenu Name="ExcludedResultPromptMenu" Visibility="{Binding Path=SelectedItem.NowSubscriptionViewModel.HasExcludedPromptsContextActions, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                                    <MenuItem Header="Paste Result Prompt" Visibility="{Binding Path=ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding PasteResultPromptCommand}" CommandParameter="Excluded"/>
                                                    <MenuItem Header="Delete Result Prompt" Visibility="{Binding Path=SelectedItem.NowSubscriptionViewModel.HasExcludedPrompts, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding DeleteResultPromptCommand}" CommandParameter="Excluded"/>
                                                </ContextMenu>
                                            </ListView.ContextMenu>
                                        </ListView>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.SubscriptionRulesVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="200,5,0,5" Width="200">Ordered prompts</Label>
                                        <ListView Margin="0,5,0,5" x:Name="NowIncludedPrompts"  
                                  ItemsSource="{Binding Path=SelectedItem.NowSubscriptionViewModel.IncludedPrompts, Mode=OneWay}" 
                                  SelectedItem="{Binding SelectedNowIncludedPromptValue, Mode=TwoWay}"
                                  VerticalContentAlignment="Top"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="Auto">
                                            <ListView.View>
                                                <GridView ColumnHeaderToolTip="Result Prompts Shared">
                                                    <GridViewColumn Header="Included Result Prompt Details" Width="500" DisplayMemberBinding="{Binding Path=ResultPromptDisplay, Mode=OneWay}"/>
                                                </GridView>
                                            </ListView.View>
                                            <!--context  Menu-->
                                            <ListView.ContextMenu>
                                                <ContextMenu Name="IncludedResultPromptMenu" Visibility="{Binding Path=SelectedItem.NowSubscriptionViewModel.HasIncludedPromptsContextActions, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                                    <MenuItem Header="Paste Result Prompt" Visibility="{Binding Path=ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding PasteResultPromptCommand}" CommandParameter="Included"/>
                                                    <MenuItem Header="Delete Result Prompt" Visibility="{Binding Path=SelectedItem.NowSubscriptionViewModel.HasIncludedPrompts, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding DeleteResultPromptCommand}" CommandParameter="Included"/>
                                                </ContextMenu>
                                            </ListView.ContextMenu>
                                        </ListView>
                                    </StackPanel>

                                    <!--Distribution-->
                                    <WrapPanel x:Name="subscriptionDistribution" Margin="0,0,0,0">
                                        <Label Margin="0,5,0,5" Width="200">Distribute As Email</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.IsEmail, Mode=TwoWay}"/>
                                    </WrapPanel>
                                    <WrapPanel>
                                        <Label Margin="0,5,0,5" Width="200">Email Template Name</Label>
                                        <TextBox Margin="0,5,0,5" Width="200" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.EmailTemplateName, Mode=TwoWay}" />
                                    </WrapPanel>
                                    <WrapPanel>
                                        <Label Margin="0,5,0,5" Width="200">Bilingual Email Template Name</Label>
                                        <TextBox Margin="0,5,0,5" Width="200" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.BilingualEmailTemplateName, Mode=TwoWay}" />
                                    </WrapPanel>

                                    <Label HorizontalAlignment="Left" Height="30" Width="200" Content="Recipient" FontWeight="Bold" Background="LightGray" Margin="0,25,0,5" />
                                    <WrapPanel x:Name="recipientOptions" Margin="0,0,0,0">
                                        <Label Margin="0,5,0,5" Width="200">Recipient From Case Details</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.CaseRecipient, Mode=TwoWay}"/>
                                        <Label Margin="40,5,0,5" Width="190">Recipient From Subscription</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.SubscriptionRecipient, Mode=TwoWay}"/>
                                        <Label Margin="40,5,0,5" Width="160">Recipient From Results</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.ResultsRecipient, Mode=TwoWay}"/>
                                        <Label Margin="40,5,0,5" Width="100">No Recipient</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.NoRecipient, Mode=TwoWay}"/>
                                    </WrapPanel>

                                    <StackPanel Margin="0,20,0,0" Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromCaseVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,0,0,20" Width="200">Case Recipients</Label>
                                        <StackPanel>
                                            <WrapPanel>
                                                <Label Margin="0,0,0,0" Width="200">Defendant Custody Details</Label>
                                                <CheckBox IsEnabled="False" Margin="0,0,0,0" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.NowSubscriptionViewModel.IsApplyDefendantCustodyDetails, Mode=OneWay}"/>
                                            </WrapPanel>
                                        </StackPanel>
                                    </StackPanel>

                                    <!--Title-->
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,0,0,0" Width="200">Title</Label>
                                        <ComboBox ItemsSource="{Binding PersonTitles}"                 
                                      SelectedValue="{Binding Path=SelectedItem.NowSubscriptionViewModel.Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      DisplayMemberPath="ValueString"
                                      SelectedValuePath="ValueString"
                                      Margin="0,0,0,0" Name="PersonTitleComboBox" Width="80" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromResultsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Title</Label>
                                        <Border BorderThickness="4" Margin="0,5,0,5" Width="500">
                                            <Border.BorderBrush>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Rectangle StrokeDashArray="6 1" Stroke="LightGray" StrokeThickness="4"
                                                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Border.BorderBrush>
                                            <TextBlock Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.TitleResultPromptDisplay, Mode=OneWay}">
                            <!--context  Menu-->
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu Name="TitleResultPromptMenu" Visibility="{Binding ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                                                        <MenuItem Header="Paste Result Prompt" Command="{Binding SetSubscriptionFromResultCommand}" CommandParameter="Title" />
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </Border>
                                    </StackPanel>

                                    <!--First Name-->
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,2,0,0" Width="200">First Name</Label>
                                        <TextBox Margin="0,2,0,0" Width="250" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.FirstName, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromResultsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">First Name</Label>
                                        <Border BorderThickness="4" Margin="0,5,0,5" Width="500">
                                            <Border.BorderBrush>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Rectangle StrokeDashArray="6 1" Stroke="LightGray" StrokeThickness="4"
                                                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Border.BorderBrush>
                                            <TextBlock Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.FirstNameResultPromptDisplay, Mode=OneWay}">
                            <!--context  Menu-->
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu Name="FisrtNameResultPromptMenu" Visibility="{Binding ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                                                        <MenuItem Header="Paste Result Prompt" Command="{Binding SetSubscriptionFromResultCommand}" CommandParameter="FirstName" />
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </Border>
                                    </StackPanel>

                                    <!--Middle Name-->
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,2,0,0" Width="200">Middle Name</Label>
                                        <TextBox Margin="0,2,0,0" Width="250" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.MiddleName, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromResultsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Middle Name</Label>
                                        <Border BorderThickness="4" Margin="0,5,0,5" Width="500">
                                            <Border.BorderBrush>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Rectangle StrokeDashArray="6 1" Stroke="LightGray" StrokeThickness="4"
                                                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Border.BorderBrush>
                                            <TextBlock Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.MiddleNameResultPromptDisplay, Mode=OneWay}">
                            <!--context  Menu-->
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu Name="MiddleNameResultPromptMenu" Visibility="{Binding ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                                                        <MenuItem Header="Paste Result Prompt" Command="{Binding SetSubscriptionFromResultCommand}" CommandParameter="MiddleName" />
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </Border>
                                    </StackPanel>

                                    <!--Last Name-->
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,2,0,0" Width="200">Last Name</Label>
                                        <TextBox Margin="0,2,0,0" Width="250" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.LastName, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromResultsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Last Name</Label>
                                        <Border BorderThickness="4" Margin="0,5,0,5" Width="500">
                                            <Border.BorderBrush>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Rectangle StrokeDashArray="6 1" Stroke="LightGray" StrokeThickness="4"
                                                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Border.BorderBrush>
                                            <TextBlock Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.LastNameResultPromptDisplay, Mode=OneWay}">
                            <!--context  Menu-->
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu Name="LastNameResultPromptMenu" Visibility="{Binding ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                                                        <MenuItem Header="Paste Result Prompt" Command="{Binding SetSubscriptionFromResultCommand}" CommandParameter="LastName" />
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </Border>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="10,0,0,0" Width="200">Or</Label>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromResultsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="10,0,0,0" Width="200">Or</Label>
                                    </StackPanel>

                                    <!--Organisation Name-->
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,2,0,0" Width="200">Organisation Name</Label>
                                        <TextBox Margin="0,2,0,0" Width="250" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.OrganisationName, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromResultsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Organisation Name</Label>
                                        <Border BorderThickness="4" Margin="0,5,0,5" Width="500">
                                            <Border.BorderBrush>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Rectangle StrokeDashArray="6 1" Stroke="LightGray" StrokeThickness="4"
                                                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Border.BorderBrush>
                                            <TextBlock Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.OrganisationNameResultPromptDisplay, Mode=OneWay}">
                            <!--context  Menu-->
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu Name="OrganisationNameResultPromptMenu" Visibility="{Binding ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                                                        <MenuItem Header="Paste Result Prompt" Command="{Binding SetSubscriptionFromResultCommand}" CommandParameter="OrganisationName" />
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </Border>
                                    </StackPanel>

                                    <!-- Recipient Address-->
                                    <Label HorizontalAlignment="Left" Height="30" Width="200" Content="Recipient Address" FontWeight="Bold" Background="LightGray" Margin="0,10,0,5" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}"/>
                                    <Label HorizontalAlignment="Left" Height="30" Width="200" Content="Recipient Address" FontWeight="Bold" Background="LightGray" Margin="0,10,0,5" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromResultsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}"/>

                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,2,0,0" Width="200">Address Line 1</Label>
                                        <TextBox Margin="0,2,0,0" Width="250" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.Address1, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromResultsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Address Line 1</Label>
                                        <Border BorderThickness="4" Margin="0,5,0,5" Width="500">
                                            <Border.BorderBrush>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Rectangle StrokeDashArray="6 1" Stroke="LightGray" StrokeThickness="4"
                                                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Border.BorderBrush>
                                            <TextBlock Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.Address1ResultPromptDisplay, Mode=OneWay}">
                                <!--context  Menu-->
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu Name="Address1ResultPromptMenu" Visibility="{Binding ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                                                        <MenuItem Header="Paste Result Prompt" Command="{Binding SetSubscriptionFromResultCommand}" CommandParameter="Address1" />
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </Border>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,2,0,0" Width="200">Address Line 2</Label>
                                        <TextBox Margin="0,2,0,0" Width="250" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.Address2, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromResultsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Address Line 2</Label>
                                        <Border BorderThickness="4" Margin="0,5,0,5" Width="500">
                                            <Border.BorderBrush>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Rectangle StrokeDashArray="6 1" Stroke="LightGray" StrokeThickness="4"
                                                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Border.BorderBrush>
                                            <TextBlock Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.Address2ResultPromptDisplay, Mode=OneWay}">
                                <!--context  Menu-->
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu Name="Address2ResultPromptMenu" Visibility="{Binding ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                                                        <MenuItem Header="Paste Result Prompt" Command="{Binding SetSubscriptionFromResultCommand}" CommandParameter="Address2" />
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </Border>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,2,0,0" Width="200">Address Line 3</Label>
                                        <TextBox Margin="0,2,0,0" Width="250" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.Address3, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromResultsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Address Line 3</Label>
                                        <Border BorderThickness="4" Margin="0,5,0,5" Width="500">
                                            <Border.BorderBrush>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Rectangle StrokeDashArray="6 1" Stroke="LightGray" StrokeThickness="4"
                                                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Border.BorderBrush>
                                            <TextBlock Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.Address3ResultPromptDisplay, Mode=OneWay}">
                                <!--context  Menu-->
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu Name="Address3ResultPromptMenu" Visibility="{Binding ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                                                        <MenuItem Header="Paste Result Prompt" Command="{Binding SetSubscriptionFromResultCommand}" CommandParameter="Address3" />
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </Border>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,2,0,0" Width="200">Address Line 4</Label>
                                        <TextBox Margin="0,2,0,0" Width="250" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.Address4, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromResultsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Address Line 4</Label>
                                        <Border BorderThickness="4" Margin="0,5,0,5" Width="500">
                                            <Border.BorderBrush>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Rectangle StrokeDashArray="6 1" Stroke="LightGray" StrokeThickness="4"
                                                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Border.BorderBrush>
                                            <TextBlock Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.Address4ResultPromptDisplay, Mode=OneWay}">
                                <!--context  Menu-->
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu Name="Address4ResultPromptMenu" Visibility="{Binding ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                                                        <MenuItem Header="Paste Result Prompt" Command="{Binding SetSubscriptionFromResultCommand}" CommandParameter="Address4" />
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </Border>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,2,0,0" Width="200">Address Line 5</Label>
                                        <TextBox Margin="0,2,0,0" Width="250" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.Address5, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromResultsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Address Line 5</Label>
                                        <Border BorderThickness="4" Margin="0,5,0,5" Width="500">
                                            <Border.BorderBrush>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Rectangle StrokeDashArray="6 1" Stroke="LightGray" StrokeThickness="4"
                                                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Border.BorderBrush>
                                            <TextBlock Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.Address5ResultPromptDisplay, Mode=OneWay}">
                                <!--context  Menu-->
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu Name="Address5ResultPromptMenu" Visibility="{Binding ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                                                        <MenuItem Header="Paste Result Prompt" Command="{Binding SetSubscriptionFromResultCommand}" CommandParameter="Address5" />
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </Border>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,2,0,0" Width="200">Post Code</Label>
                                        <TextBox Name="PostCodeTextBox" Margin="0,2,0,0" Width="80" CharacterCasing="Upper"
                        Validation.ErrorTemplate="{StaticResource ValidationTemplate}" Style="{StaticResource textBoxInError}">
                                            <TextBox.Text>
                                                <Binding Path="SelectedItem.NowSubscriptionViewModel.PostCode" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" >
                                                    <Binding.ValidationRules>
                                                        <bv:UKPostCodeRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromResultsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Post Code</Label>
                                        <Border BorderThickness="4" Margin="0,5,0,5" Width="500">
                                            <Border.BorderBrush>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Rectangle StrokeDashArray="6 1" Stroke="LightGray" StrokeThickness="4"
                                                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Border.BorderBrush>
                                            <TextBlock Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.PostCodeResultPromptDisplay, Mode=OneWay}">
                                <!--context  Menu-->
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu Name="PostCodeResultPromptMenu" Visibility="{Binding ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                                                        <MenuItem Header="Paste Result Prompt" Command="{Binding SetSubscriptionFromResultCommand}" CommandParameter="PostCode" />
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </Border>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,20,0,5" Width="200">Email Address 1</Label>
                                        <TextBox Name="Email1TextBox" Margin="0,20,0,5" Width="400" MaxLength="254" 
                        Validation.ErrorTemplate="{StaticResource ValidationTemplate}" Style="{StaticResource textBoxInError}">
                                            <TextBox.Text>
                                                <Binding Path="SelectedItem.NowSubscriptionViewModel.EmailAddress1" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" >
                                                    <Binding.ValidationRules>
                                                        <bv:EmailAddressRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromResultsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Email Address 1</Label>
                                        <Border BorderThickness="4" Margin="0,5,0,5" Width="500">
                                            <Border.BorderBrush>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Rectangle StrokeDashArray="6 1" Stroke="LightGray" StrokeThickness="4"
                                                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Border.BorderBrush>
                                            <TextBlock Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.EmailAddress1ResultPromptDisplay, Mode=OneWay}">
                                <!--context  Menu-->
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu Name="EmailAddressResult1PromptMenu" Visibility="{Binding ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                                                        <MenuItem Header="Paste Result Prompt" Command="{Binding SetSubscriptionFromResultCommand}" CommandParameter="EmailAddress1" />
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </Border>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromSubscriptionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,20,0,5" Width="200">Email Address 2</Label>
                                        <TextBox Name="Email2TextBox" Margin="0,20,0,5" Width="400" MaxLength="254" 
                        Validation.ErrorTemplate="{StaticResource ValidationTemplate}" Style="{StaticResource textBoxInError}">
                                            <TextBox.Text>
                                                <Binding Path="SelectedItem.NowSubscriptionViewModel.EmailAddress2" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" >
                                                    <Binding.ValidationRules>
                                                        <bv:EmailAddressRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedItem.NowSubscriptionViewModel.RecipientFromResultsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Email Address 2</Label>
                                        <Border BorderThickness="4" Margin="0,5,0,5" Width="500">
                                            <Border.BorderBrush>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Rectangle StrokeDashArray="6 1" Stroke="LightGray" StrokeThickness="4"
                                                  Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                                  Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Border.BorderBrush>
                                            <TextBlock Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.EmailAddress2ResultPromptDisplay, Mode=OneWay}">
                                <!--context  Menu-->
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu Name="EmailAddressResult2PromptMenu" Visibility="{Binding ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                                                        <MenuItem Header="Paste Result Prompt" Command="{Binding SetSubscriptionFromResultCommand}" CommandParameter="EmailAddress2" />
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </Border>
                                    </StackPanel>

                                    <WrapPanel x:Name="nowSubscriptiondates" Margin="0,10,0,10" Visibility="Collapsed">
                                        <Label Margin="0,5,0,5" Width="200" >Start Date</Label>
                                        <DatePicker Margin="0,5,0,5" SelectedDate="{Binding Path=SelectedItem.NowSubscriptionViewModel.StartDate, Mode=TwoWay, TargetNullValue=''}" />
                                        <Label Margin="10,5,0,5">End Date</Label>
                                        <DatePicker Margin="0,5,0,5" SelectedDate="{Binding Path=SelectedItem.NowSubscriptionViewModel.EndDate, Mode=TwoWay, TargetNullValue=''}" />
                                    </WrapPanel>
                                </StackPanel>
                                <Expander Header="Activity">
                                    <StackPanel>
                                        <ListView Margin="10,5,0,5" x:Name="subscription_Comments"
                                            HorizontalAlignment="Left"
                                            Width="Auto"
                                            Height="Auto"
                                            MinHeight="100"
                                            MaxHeight="500"
                                            VerticalContentAlignment="Top"  
                                            ScrollViewer.VerticalScrollBarVisibility="Visible"
                                            ItemsSource="{Binding Path=SelectedItem.NowSubscriptionViewModel.AssociatedCommentsModel.Comments, Mode=OneWay, UpdateSourceTrigger=LostFocus}" 
                                            SelectedItem="{Binding Path=SelectedItem.NowSubscriptionViewModel.AssociatedCommentsModel.SelectedComment, Mode=TwoWay}">
                                            <ListView.View>
                                                <GridView>
                                                    <GridViewColumn Header="Comment" Width="610">
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBox Margin="0,5,0,5" Width="590" TextWrapping="WrapWithOverflow" AcceptsReturn="True"
                                                                    IsReadOnly="{Binding IsReadOnly, Mode=OneTime}"
                                                                    VerticalScrollBarVisibility="Auto" MaxHeight="250" Height="Auto" Text="{Binding Note, Mode=TwoWay}" />
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                    <GridViewColumn Header="Made By" Width="Auto">
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBlock VerticalAlignment="Top" Width="Auto" x:Name="madeby" Text="{Binding MadeBy, Mode=OneWay}" Margin="5,0,0,0" />
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                </GridView>
                                            </ListView.View>
                                            <ListView.ContextMenu>
                                                <ContextMenu Name="subscription_CommentsMenu" Visibility="{Binding Path=SelectedItem.NowSubscriptionViewModel.AssociatedCommentsModel.IsEnabled, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                                    <MenuItem Header="Add New Comment" Command="{Binding Path=SelectedItem.NowSubscriptionViewModel.AssociatedCommentsModel.AddCommentCommand}"/>
                                                    <MenuItem Header="Delete Selected Comment" Command="{Binding Path=SelectedItem.NowSubscriptionViewModel.AssociatedCommentsModel.DeleteCommentCommand}"/>
                                                </ContextMenu>
                                            </ListView.ContextMenu>
                                        </ListView>
                                    </StackPanel>
                                </Expander>
                                <Expander Header="Audit">
                                    <StackPanel x:Name="nowSubscriptionauditdates" Margin="10,5,0,0" Orientation="Vertical" IsEnabled="{Binding Path=SelectedItem.NowSubscriptionViewModel.IsEnabled, Mode=OneWay}">
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Created</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.CreatedUser, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.CreatedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Modified</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.LastModifiedUser, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.LastModifiedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Deleted</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.DeletedUser, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.DeletedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Published Status</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.PublishedStatus, Converter={StaticResource enumStringConverter}, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.PublishedStatusDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal" Visibility="{Binding Path=SelectedItem.NowSubscriptionViewModel.IsRevision, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                            <Label Margin="0,5,0,5" Width="200" >Original Date Published</Label>
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.OriginalPublishedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200">Publication Tags</Label>
                                            <ListView Margin="0,5,0,5" x:Name="subscription_PublicationTags" 
                                        Visibility="{Binding Path=SelectedItem.NowSubscriptionViewModel.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" 
                                        ItemsSource="{Binding Path=SelectedItem.NowSubscriptionViewModel.PublicationTagsModel.AvailablePublicationTags, Mode=OneWay, UpdateSourceTrigger=LostFocus}" 
                                        SelectedItem="{Binding Path=SelectedItem.NowSubscriptionViewModel.PublicationTagsModel.SelectedAvailableTag, Mode=TwoWay}">
                                                <ListView.View>
                                                    <GridView>
                                                        <GridViewColumn Header="Available Tags" Width="250" DisplayMemberBinding="{Binding Path=., Mode=TwoWay}"/>
                                                    </GridView>
                                                </ListView.View>
                                            </ListView>
                                            <StackPanel Orientation="Vertical" Margin="0,5,0,5" Visibility="{Binding Path=SelectedItem.NowSubscriptionViewModel.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                                <Button Name="now_btnAddPublicationTag" Height="30" Margin="15,10,15,5" Padding="8,0"  
                                            IsEnabled="{Binding Path=SelectedItem.NowSubscriptionViewModel.PublicationTagsModel.AddTagEnabled, FallbackValue=false}" 
                                            Command="{Binding Path=SelectedItem.NowSubscriptionViewModel.PublicationTagsModel.AddTagCommand}">Add >></Button>
                                                <Button Name="rd_btnRemovePublicationTag" Height="30" Margin="15,5,15,5" Padding="8,0" 
                                            IsEnabled="{Binding Path=SelectedItem.NowSubscriptionViewModel.PublicationTagsModel.RemoveTagEnabled, FallbackValue=false}" 
                                            Command="{Binding Path=SelectedItem.NowSubscriptionViewModel.PublicationTagsModel.RemoveTagCommand}">&lt;&lt; Remove</Button>
                                            </StackPanel>
                                            <ListView Margin="0,5,0,5" x:Name="rd_SelectedPublicationTags" 
                                        ItemsSource="{Binding Path=SelectedItem.NowSubscriptionViewModel.PublicationTagsModel.SelectedPublicationTags, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
                                        SelectedItem="{Binding Path=SelectedItem.NowSubscriptionViewModel.PublicationTagsModel.SelectedTag, Mode=TwoWay}">
                                                <ListView.View>
                                                    <GridView >
                                                        <GridViewColumn Header="Selected Tags" Width="250" DisplayMemberBinding="{Binding Path=., Mode=TwoWay}"/>
                                                    </GridView>
                                                </ListView.View>
                                            </ListView>
                                        </StackPanel>
                                        <StackPanel Margin="200,0,0,0" 
                                            Orientation="Horizontal" 
                                            Visibility="{Binding Path=SelectedItem.NowSubscriptionViewModel.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                            <TextBox Margin="0,5,0,5" Width="250" 
                                             Text="{Binding Path=SelectedItem.NowSubscriptionViewModel.PublicationTagsModel.NewTag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Button Name="btnNewTag"
                                            IsEnabled="{Binding Path=SelectedItem.NowSubscriptionViewModel.PublicationTagsModel.AddNewTagEnabled, FallbackValue=false}" 
                                            HorizontalAlignment="Left" Height="30" Width="100" Margin="20,5,0,5" 
                                            Padding="8,0" Command="{Binding Path=SelectedItem.NowSubscriptionViewModel.PublicationTagsModel.AddNewTagCommand}">Add New Tag</Button>
                                        </StackPanel>
                                    </StackPanel>
                                </Expander>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </Grid>
    </DockPanel>
</UserControl>
