<UserControl 
  x:Class="TimsTool.Tree.ResultDefinitionControl"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:vm="clr-namespace:Models.ViewModels;assembly=Models"
  xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:b="clr-namespace:TimsTool.Tree.Behaviors"
  xmlns:bi="clr-namespace:TimsTool.Tree.Binding"
  xmlns:bv="clr-namespace:TimsTool.Tree.BindingValidation"
  xmlns:d="clr-namespace:DataLib;assembly=DataLib"
  xmlns:e="clr-namespace:TimsTool.Tree.Extended"
  xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
  FocusManager.FocusedElement="{Binding ElementName=searchTextBox}">
    <DockPanel>
        <Grid Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10,0,0,0">
                <Label Margin="0,0,0,5">Published</Label>
                <CheckBox Margin="0,0,0,5" Width="15" Height="15" Name="TickPublished" IsChecked="True"/>
                <Label Margin="10,0,0,5">Revisions</Label>
                <CheckBox Margin="0,0,0,5" Width="15" Height="15" Name="TickRevisions" IsChecked="True"/>
                <Label Margin="10,0,0,5">Draft</Label>
                <CheckBox Margin="0,0,0,5" Width="15" Height="15" Name="TickDraft" IsChecked="True"/>
            </StackPanel>
            <Grid Background="Transparent" Grid.Row="1">
                <Grid.Resources>
                    <BooleanToVisibilityConverter x:Key="BoolToVis"/>
                    <bi:EnumBooleanConverter x:Key="enumBooleanConverter" />
                    <bi:EnumStringConverter x:Key="enumStringConverter" />

                    <ControlTemplate x:Key="ValidationTemplate">
                        <DockPanel>
                            <TextBlock Foreground="Red" FontSize="20" Margin="0,0,15,0">!</TextBlock>
                            <AdornedElementPlaceholder/>
                        </DockPanel>
                    </ControlTemplate>
                    <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="Foreground" Value="Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <e:ColumnDefinitionExtended Width="400" Visible="{Binding IsChecked, ElementName=TickPublished, Mode=OneWay}"/>
                    <e:ColumnDefinitionExtended Width="5" Visible="{Binding IsChecked, ElementName=TickPublished, Mode=OneWay}"/>
                    <e:ColumnDefinitionExtended Width="400" Visible="{Binding IsChecked, ElementName=TickRevisions, Mode=OneWay}"/>
                    <e:ColumnDefinitionExtended Width="5" Visible="{Binding IsChecked, ElementName=TickRevisions, Mode=OneWay}"/>
                    <e:ColumnDefinitionExtended Width="400" Visible="{Binding IsChecked, ElementName=TickDraft, Mode=OneWay}"/>
                    <e:ColumnDefinitionExtended Width="5" Visible="{Binding IsChecked, ElementName=TickDraft, Mode=OneWay}"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"  />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Rectangle Grid.Row="0" Grid.Column="0" Fill="LightGray" />
                <TextBlock Text="Published" FontSize="16" FontWeight="SemiBold" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.Column="0" />
                <Rectangle Grid.Row="0" Grid.Column="2" Fill="LightGray" />
                <TextBlock Text="Revisions" FontSize="16" FontWeight="SemiBold" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.Column="2" />
                <Rectangle Grid.Row="0" Grid.Column="4" Fill="LightGray" />
                <TextBlock Text="Draft" FontSize="16" FontWeight="SemiBold" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Grid.Column="4" />

                <AdornerDecorator x:Name="PART_DragDropAdorner" Grid.ColumnSpan="6" Grid.RowSpan="2" />

                <!-- RESULT DEFINITIONS TREE PUBLISHED -->
                <TreeView Name="tvResultDefinitions"
                Grid.Column="0"
                Grid.Row="1"
                Width="Auto" Background="#FFFFFFFF" BorderBrush="#FFFFFFFF" Foreground="#FFFFFFFF"
                AllowDrop="False" 
                ItemsSource="{Binding ResultDefinitionRootsPublished}"
                MouseUp="TreeView_MouseUp">

                    <i:Interaction.Behaviors>
                        <b:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
                    </i:Interaction.Behaviors>

                    <TreeView.ItemContainerStyle>
                        <!-- This Style binds a TreeViewItem to a TreeViewItemViewModel.  -->
                        <Style TargetType="{x:Type TreeViewItem}">
                            <EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
                            <EventSetter Event="TreeViewItem.Selected" Handler="TreeViewItem_Selected" />

                            <!--<EventSetter Event="TreeViewItem.DragOver" Handler="TreeViewItem_DragOver"/>
                    <EventSetter Event="TreeViewItem.Drop" Handler="TreeViewItem_Drop"/>-->
                            <EventSetter Event="TreeViewItem.MouseMove" Handler="TreeViewItem_MouseMove"/>
                            <EventSetter Event="TreeViewItem.PreviewMouseLeftButtonDown" Handler="TreeViewItem_PreviewMouseLeftButtonDown"/>

                            <Setter Property="AllowDrop" Value="False" />
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <Setter Property="Margin" Value="3,1,0,1" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.Resources>
                        <bi:TreeModelBindingProxy x:Key="Proxy" Data="{Binding}" />
                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultDefinitionTreeViewModel}" ItemsSource="{Binding Children}">
                            <StackPanel Orientation="Horizontal" >
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Add New Result Definition" Click="MenuItem_AddNewResultDefinition_Click"/>
                                        <MenuItem Header="Copy Result Definition" Command="{Binding Source={StaticResource Proxy}, Path=Data.CopyResultDefinitionCommand}"/>
                                        <MenuItem Header="Create Draft Result Definition" Click="MenuItem_DraftResultDefinition_Click"/>
                                        <Separator/>
                                        <MenuItem Header="Usages Report" Click="MenuItem_ResultUsages_Click" />
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,1,3,1" Source="Images\ResultDefinition.png" />
                                <TextBlock x:Name="label" Text="{Binding Path=ResultRuleViewModel.ChildResultDefinitionViewModel.Label}" Margin="3,1,3,1"/>
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsResultDefinitionGroup, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultDefinitionGroup.png"/>
                                    <Setter TargetName="icon" Property="Width" Value="22"/>
                                    <Setter TargetName="icon" Property="Height" Value="22"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsStandaloneResultDefinitionDeleted, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultDefinitionDeleted.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsResultDefinitionGroupDeleted, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultDefinitionGroupDeleted.png"/>
                                    <Setter TargetName="icon" Property="Width" Value="22"/>
                                    <Setter TargetName="icon" Property="Height" Value="22"/>
                                    <Setter TargetName="label" Property="Foreground" Value="red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsStandaloneResultDefinitionPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultDefinitionPublishedPending.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsResultDefinitionGroupPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultDefinitionGroupPublishedPending.png"/>
                                    <Setter TargetName="icon" Property="Width" Value="22"/>
                                    <Setter TargetName="icon" Property="Height" Value="22"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsBooleanResultNotPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\BooleanResultDefinition.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsBooleanResultPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\BooleanResultDefinitionPublishedPending.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsParent}" Value="True">
                                    <Setter TargetName="label" Property="FontSize" Value="15"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultPromptTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Copy Result Prompt" Command="{Binding Source={StaticResource Proxy}, Path=Data.CopyResultPromptCommand}"/>
                                        <Separator/>
                                        <MenuItem Header="Usages Report" Click="MenuItem_PromptUsages_Click" />
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,1,3,1" Source="Images\ResultPrompt.png" />
                                <TextBlock x:Name="label" Text="{Binding Path=ResultPromptRuleViewModel.ResultPromptViewModel.Label}" Margin="3,1,3,1" />
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=ResultPromptRuleViewModel.IsDeleted, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultPromptDeleted.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultPromptRuleViewModel.IsResultPromptPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultPromptPublishedPending.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultWordGroupTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,1,3,1" Source="Images\WordGroup.png" />
                                <TextBlock x:Name="label" Text="{Binding Path=ResultWordGroupViewModel.WordGroupName}" Margin="3,1,3,1" />
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=ResultWordGroupViewModel.IsPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\WordGroupPublishedPending.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultDefinitionWordGroupTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,1,3,1" Source="Images\Synonym.png" />
                                <TextBlock x:Name="label" Text="{Binding  Path=ResultDefinitionWordGroupViewModel.ResultDefinitionWord}" Margin="3,1,3,1" />
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=ResultDefinitionWordGroupViewModel.IsPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\SynonymPublishedPending.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultPromptWordGroupTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,1,3,1" Source="Images\Synonym.png" />
                                <TextBlock x:Name="label" Text="{Binding  Path=ResultPromptWordGroupViewModel.ResultPromptWord}" Margin="3,1,3,1" />
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=ResultPromptWordGroupViewModel.IsPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\SynonymPublishedPending.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:FixedListTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,1,3,1" Source="Images\FixedList.png" />
                                <TextBlock x:Name="label" Text="{Binding  Path=FixedListViewModel.Label}" Margin="3,1,3,1" />
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=FixedListViewModel.IsFixedListPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\FixedListPublishedPending.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>
                <GridSplitter ResizeDirection="Columns" 
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
            ResizeBehavior="PreviousAndNext" Grid.Column="1" Grid.Row="1"/>

                <!-- RESULT DEFINITIONS TREE REVISIONS -->
                <TreeView Name="tvResultDefinitionsRevisions"
                Grid.Column="2"
                Grid.Row="1"
                Width="Auto" Background="#FFFFFFFF" BorderBrush="#FFFFFFFF" Foreground="#FFFFFFFF"
                AllowDrop="False" 
                ItemsSource="{Binding ResultDefinitionRevision}"
                MouseUp="TreeView_MouseUp">
                    <i:Interaction.Behaviors>
                        <b:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
                    </i:Interaction.Behaviors>

                    <TreeView.ItemContainerStyle>
                        <!-- This Style binds a TreeViewItem to a TreeViewItemViewModel.  -->
                        <Style TargetType="{x:Type TreeViewItem}">
                            <EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
                            <EventSetter Event="TreeViewItem.Selected" Handler="TreeViewItem_Selected" />

                            <!--<EventSetter Event="TreeViewItem.DragOver" Handler="TreeViewItem_DragOver"/>
                    <EventSetter Event="TreeViewItem.Drop" Handler="TreeViewItem_Drop"/>-->
                            <EventSetter Event="TreeViewItem.MouseMove" Handler="TreeViewItem_MouseMove"/>
                            <EventSetter Event="TreeViewItem.PreviewMouseLeftButtonDown" Handler="TreeViewItem_PreviewMouseLeftButtonDown"/>


                            <Setter Property="AllowDrop" Value="False" />
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <Setter Property="Margin" Value="3,1,0,1" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.Resources>
                        <bi:TreeModelBindingProxy x:Key="Proxy" Data="{Binding}" />

                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultDefinitionRevisionTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu Visibility="{Binding Source={StaticResource Proxy}, Path=Data.RevisionsDeleteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <MenuItem Header="Delete Revisions" Command="{Binding Source={StaticResource Proxy}, Path=Data.DeleteRevisionsCommand}"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image x:Name="icon" Width="22" Height="22" Margin="3,0" Source="Images\Published.png" />
                                <TextBlock x:Name="label" Text="{Binding Path=Label}" />
                            </StackPanel>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultDefinitionTreeViewModel}" ItemsSource="{Binding Children}">
                            <StackPanel Orientation="Horizontal" >                             
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,1,3,1" Source="Images\ResultDefinition.png" />
                                <TextBlock x:Name="label" Text="{Binding Path=ResultRuleViewModel.ChildResultDefinitionViewModel.Label}" Margin="3,1,3,1"/>
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsResultDefinitionGroup, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultDefinitionGroup.png"/>
                                    <Setter TargetName="icon" Property="Width" Value="22"/>
                                    <Setter TargetName="icon" Property="Height" Value="22"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsStandaloneResultDefinitionDeleted, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultDefinitionDeleted.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsResultDefinitionGroupDeleted, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultDefinitionGroupDeleted.png"/>
                                    <Setter TargetName="icon" Property="Width" Value="22"/>
                                    <Setter TargetName="icon" Property="Height" Value="22"/>
                                    <Setter TargetName="label" Property="Foreground" Value="red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsBooleanResultNotPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\BooleanResultDefinition.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsBooleanResultPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\BooleanResultDefinitionPublishedPending.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsParent}" Value="True">
                                    <Setter TargetName="label" Property="FontSize" Value="15"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultPromptTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Usages Report" Click="MenuItem_PromptUsages_Click" />
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,1,3,1" Source="Images\ResultPrompt.png" />
                                <TextBlock x:Name="label" Text="{Binding Path=ResultPromptRuleViewModel.ResultPromptViewModel.Label}" Margin="3,1,3,1" />
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=ResultPromptRuleViewModel.IsDeleted, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultPromptDeleted.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="red"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultWordGroupTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Height="16" Margin="3,1,3,1" Source="Images\WordGroup.png" />
                                <TextBlock Text="{Binding Path=ResultWordGroupViewModel.WordGroupName}" Margin="3,1,3,1" />
                            </StackPanel>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultDefinitionWordGroupTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,1,3,1" Source="Images\Synonym.png" />
                                <TextBlock x:Name="label" Text="{Binding  Path=ResultDefinitionWordGroupViewModel.ResultDefinitionWord}" Margin="3,1,3,1" />
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=ResultPromptWordGroupViewModel.IsDeleted, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\SynonymDeleted.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="red"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultPromptWordGroupTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Height="16" Margin="3,1,3,1" Source="Images\Synonym.png" />
                                <TextBlock Text="{Binding  Path=ResultPromptWordGroupViewModel.ResultPromptWord}" Margin="3,1,3,1" />
                            </StackPanel>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:FixedListTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Height="16" Margin="3,1,3,1" Source="Images\FixedList.png" />
                                <TextBlock Text="{Binding  Path=FixedListViewModel.Label}" Margin="3,1,3,1" />
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>
                <GridSplitter ResizeDirection="Columns" 
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
            ResizeBehavior="PreviousAndNext" Grid.Column="3" Grid.Row="1"/>

                <!-- RESULT DEFINITIONS TREE DRAFT -->
                <TreeView Name="tvResultDefinitionsDraft"
                Grid.Column="4"
                Grid.Row="1"
                Width="Auto" Background="#FFFFFFFF" BorderBrush="#FFFFFFFF" Foreground="#FFFFFFFF"
                AllowDrop="True" 
                ItemsSource="{Binding ResultDefinitionRootsDraft}"
                DragOver="TreeView_DragOver"
                MouseUp="TreeView_MouseUp">
                    <i:Interaction.Behaviors>
                        <b:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
                    </i:Interaction.Behaviors>
                    <TreeView.ItemContainerStyle>
                        <!-- This Style binds a TreeViewItem to a TreeViewItemViewModel.  -->
                        <Style TargetType="{x:Type TreeViewItem}">
                            <EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
                            <EventSetter Event="TreeViewItem.Selected" Handler="TreeViewItem_Selected" />

                            <EventSetter Event="TreeViewItem.DragOver" Handler="TreeViewItem_DragOver"/>
                            <EventSetter Event="TreeViewItem.MouseMove" Handler="TreeViewItem_MouseMove"/>
                            <!--<EventSetter Event="TreeViewItem.PreviewMouseLeftButtonDown" Handler="TreeViewItem_PreviewMouseLeftButtonDown"/>-->

                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="AllowDrop" Value="True" />
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <Setter Property="Margin" Value="3,1,0,1" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.Resources>
                        <bi:TreeModelBindingProxy x:Key="Proxy" Data="{Binding}" />
                        <!--<bi:CollectionViewFactoryConverter x:Key="RDConverter" />

                <HierarchicalDataTemplate DataType="{x:Type vm:ResultDefinitionTreeViewModel}" ItemsSource="{Binding Children,
                                            Converter={StaticResource RDConverter},ConverterParameter='DisplayName'}" >-->
                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultDefinitionTreeViewModel}" ItemsSource="{Binding Children}">
                            <StackPanel Orientation="Horizontal" >
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Add New Result Definition" Click="MenuItem_AddNewResultDefinition_Click"/>
                                        <MenuItem Header="Add New Child Result Definition" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultDefinitionDeleteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.AddNewChildResultDefinitionCommand}"/>
                                        <Separator/>
                                        <MenuItem Header="Add New Result Prompt" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultDefinitionDeleteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.AddNewResultPromptCommand}"/>
                                        <MenuItem Header="Add New Result Definition Word Group" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.AddPasteRDWGVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.AddNewResultDefinitionWordGroupCommand}"/>
                                        <Separator Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultDefinitionDeleteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" />
                                        <MenuItem Header="Create Draft Result Definition" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultDefinitionDraftVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Click="MenuItem_DraftResultDefinition_Click"/>
                                        <MenuItem Header="Publish Draft Result Definition" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultDefinitionPublishVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Click="MenuItem_PublishResultDefinition_Click" />
                                        <MenuItem Header="Copy Result Definition" Command="{Binding Source={StaticResource Proxy}, Path=Data.CopyResultDefinitionCommand}"/>
                                        <Separator Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultDefinitionPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" />
                                        <MenuItem Header="Paste Result Definition" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultDefinitionPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.PasteResultDefinitionCommand}"/>
                                        <MenuItem Header="Paste Child Result Definition" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultDefinitionPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Click="MenuItem_PasteChildRD_Click"/>
                                        <Separator Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultDefinitionChildPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" />
                                        <MenuItem Header="Paste Result Prompt" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.PasteResultPromptCommand}"/>
                                        <MenuItem Header="Paste Result Definition Word Group" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultDefinitionWordGroupPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.PasteResultDefinitionWordGroupCommand}"/>
                                        <Separator Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultDefinitionDeleteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" />
                                        <MenuItem Header="{Binding Path=ResultRuleViewModel.DeleteHeader}" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultDefinitionDeleteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.DeleteResultDefinitionCommand}"/>
                                        <MenuItem Header="Set As Deleted" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.SetResultDefinitionDeleteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.SetDeleteResultDefinitionCommand}"/>
                                        <Separator/>
                                        <MenuItem Header="Usages Report" Click="MenuItem_ResultUsages_Click" />
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,1,3,1" Source="Images\ResultDefinition.png" />
                                <TextBlock x:Name="label" Text="{Binding Path=ResultRuleViewModel.ChildResultDefinitionViewModel.Label}" Margin="3,1,3,1"/>
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsResultDefinitionGroup, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultDefinitionGroup.png"/>
                                    <Setter TargetName="icon" Property="Width" Value="22"/>
                                    <Setter TargetName="icon" Property="Height" Value="22"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsStandaloneResultDefinitionDeleted, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultDefinitionDeleted.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsResultDefinitionGroupDeleted, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultDefinitionGroupDeleted.png"/>
                                    <Setter TargetName="icon" Property="Width" Value="22"/>
                                    <Setter TargetName="icon" Property="Height" Value="22"/>
                                    <Setter TargetName="label" Property="Foreground" Value="red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsStandaloneResultDefinitionPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultDefinitionPublishedPending.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsResultDefinitionGroupPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultDefinitionGroupPublishedPending.png"/>
                                    <Setter TargetName="icon" Property="Width" Value="22"/>
                                    <Setter TargetName="icon" Property="Height" Value="22"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsBooleanResultNotPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\BooleanResultDefinition.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultRuleViewModel.IsBooleanResultPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\BooleanResultDefinitionPublishedPending.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsParent}" Value="True">
                                    <Setter TargetName="label" Property="FontSize" Value="15"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultPromptTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Add New Result Prompt" Command="{Binding Source={StaticResource Proxy}, Path=Data.AddNewResultPromptCommand}"/>
                                        <MenuItem Header="Add New Fixed List" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultPromptDraftChildActionsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.AddFixedListCommand}"/>
                                        <MenuItem Header="Add New Result Prompt Word Group" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultPromptDraftChildActionsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.AddNewResultPromptWordGroupCommand}"/>
                                        <Separator/>
                                        <MenuItem Header="Create Draft Result Prompt" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultPromptDraftVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.DraftResultPromptCommand}"/>
                                        <MenuItem Header="Copy Result Prompt" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultPromptDeleteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.CopyResultPromptCommand}"/>
                                        <MenuItem Header="Paste Result Prompt" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultPromptPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.PasteResultPromptCommand}"/>
                                        <MenuItem Header="Paste Fixed List" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.FixedListPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.PasteFixedListCommand}"/>
                                        <MenuItem Header="Paste Result Prompt Word Group" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultPromptWordGroupPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.PasteResultPromptWordGroupCommand}"/>
                                        <Separator/>
                                        <MenuItem Header="Delete Result Prompt" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultPromptDeleteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Click="MenuItem_DeletePrompt_Click"/>
                                        <MenuItem Header="Undelete Result Prompt" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultPromptUndeleteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.UndeleteResultPromptCommand}"/>
                                        <MenuItem Header="Purge Result Prompt" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultPromptUndeleteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Click="MenuItem_DeletePrompt_Click"/>
                                        <Separator/>
                                        <MenuItem Header="Usages Report" Click="MenuItem_PromptUsages_Click" />
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,1,3,1" Source="Images\ResultPrompt.png" />
                                <TextBlock x:Name="label" Text="{Binding Path=ResultPromptRuleViewModel.ResultPromptViewModel.Label}" Margin="3,1,3,1" />
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=ResultPromptRuleViewModel.IsDeleted, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultPromptDeleted.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultPromptRuleViewModel.IsResultPromptPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\ResultPromptPublishedPending.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultWordGroupTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Add New Result Definition Word Group" Command="{Binding Source={StaticResource Proxy}, Path=Data.AddNewResultDefinitionWordGroupCommand}"/>
                                        <Separator/>
                                        <MenuItem Header="Paste Result Definition Word Group" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultDefinitionWordGroupPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.PasteResultDefinitionWordGroupCommand}"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,1,3,1" Source="Images\WordGroup.png" />
                                <TextBlock x:Name="label" Text="{Binding Path=ResultWordGroupViewModel.WordGroupName}" Margin="3,1,3,1" />
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=ResultWordGroupViewModel.IsPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\WordGroupPublishedPending.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultDefinitionWordGroupTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Add New Result Definition Word Group" Command="{Binding Source={StaticResource Proxy}, Path=Data.AddNewResultDefinitionWordGroupCommand}"/>
                                        <Separator/>
                                        <MenuItem Header="Create Draft Result Definition Word Group" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultDefinitionWordGroupDraftVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.DraftResultDefinitionWordGroupCommand}"/>
                                        <MenuItem Header="Copy Result Definition Word Group" Command="{Binding Source={StaticResource Proxy}, Path=Data.CopyResultDefinitionWordGroupCommand}"/>
                                        <MenuItem Header="Paste Result Definition Word Group" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultDefinitionWordGroupPasteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.PasteResultDefinitionWordGroupCommand}"/>
                                        <Separator/>
                                        <MenuItem Header="Delete Result Definition Word Group" Command="{Binding Source={StaticResource Proxy}, Path=Data.DeleteResultDefinitionWordGroupCommand}"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,1,3,1" Source="Images\Synonym.png" />
                                <TextBlock x:Name="label" Text="{Binding  Path=ResultDefinitionWordGroupViewModel.ResultDefinitionWord}" Margin="3,1,3,1" />
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=ResultDefinitionWordGroupViewModel.IsPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\SynonymPublishedPending.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:ResultPromptWordGroupTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Create Draft Result Prompt Word Group" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultPromptWordGroupDraftVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.DraftResultPromptWordGroupCommand}"/>
                                        <Separator/>
                                        <MenuItem Header="Copy Result Prompt Word Group" Command="{Binding Source={StaticResource Proxy}, Path=Data.CopyResultPromptWordGroupCommand}"/>
                                        <Separator/>
                                        <MenuItem Header="Delete Result Prompt Word Group" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultPromptWordGroupDeleteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.DeleteResultPromptWordGroupCommand}"/>
                                        <MenuItem Header="Undelete Result Prompt Word Group" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.ResultPromptWordGroupUndeleteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.UndeleteResultPromptWordGroupCommand}"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,1,3,1" Source="Images\Synonym.png" />
                                <TextBlock x:Name="label" Text="{Binding  Path=ResultPromptWordGroupViewModel.ResultPromptWord}" Margin="3,1,3,1" />
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=ResultPromptWordGroupViewModel.IsDeleted, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\SynonymDeleted.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ResultPromptWordGroupViewModel.IsPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\SynonymPublishedPending.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type vm:FixedListTreeViewModel}" ItemsSource="{Binding Children}" >
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Create Draft Fixed List" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.FixedListDraftVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.DraftFixedListCommand}"/>
                                        <Separator/>
                                        <MenuItem Header="Copy Fixed List" Command="{Binding Source={StaticResource Proxy}, Path=Data.CopyFixedListCommand}"/>
                                        <Separator/>
                                        <MenuItem Header="Delete Fixed List" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.FixedListDeleteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.DeleteFixedListCommand}"/>
                                        <MenuItem Header="Undelete Fixed List" Visibility="{Binding Source={StaticResource Proxy}, Path=Data.FixedListUndeleteVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Command="{Binding Source={StaticResource Proxy}, Path=Data.UndeleteFixedListCommand}"/>
                                    </ContextMenu>
                                </StackPanel.ContextMenu>
                                <Image x:Name="icon" Width="16" Height="16" Margin="3,1,3,1" Source="Images\FixedList.png" />
                                <TextBlock x:Name="label" Text="{Binding  Path=FixedListViewModel.Label}" Margin="3,1,3,1" />
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=FixedListViewModel.IsDeleted, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\FixedListDeleted.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=FixedListViewModel.IsFixedListPublishedPending, Mode=OneWay}" Value="True">
                                    <Setter TargetName="icon" Property="Source" Value="Images\FixedListPublishedPending.png"/>
                                    <Setter TargetName="label" Property="Foreground" Value="#ffae00"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>
                <GridSplitter ResizeDirection="Columns" 
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
            ResizeBehavior="PreviousAndNext" Grid.Column="5" Grid.Row="1"/>

                <ScrollViewer Grid.Column="6" Grid.Row="0" Grid.RowSpan="2" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Visibility="{Binding SelectedResultDefinitionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                    <StackPanel Grid.Column="6" Grid.Row="0" Grid.RowSpan="2" Orientation="Vertical" Visibility="{Binding SelectedResultDefinitionVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Name="resultDefinition" >
                        <Label  Height="30" Content="Result Definition" FontWeight="SemiBold" Background="LightGray" IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.IsEnabled, Mode=OneWay}" />
                        <Expander Header="Identifiers" IsExpanded="False">
                            <StackPanel Margin="10,5,0,0">
                                <StackPanel Orientation="Horizontal" Visibility="Visible">
                                    <Label Margin="0,5,0,5" Width="200" IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.IsEnabled, Mode=OneWay}">Master Identifier</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="400" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.MasterUUID, Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Visibility="Visible">
                                    <Label Margin="0,5,0,5" Width="200" IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.IsEnabled, Mode=OneWay}">Identifier</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="400" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.UUID, Mode=OneWay}" />
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                        <Separator Height="2"/>
                        <Expander Header="Result Definition Rule" Visibility="{Binding SelectedResultDefinitionRuleVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                            <StackPanel Orientation="Vertical" Margin="10,5,0,0">
                                <Expander Header="Rule Identifiers">
                                    <StackPanel Margin="10,5,0,0">
                                        <StackPanel Orientation="Horizontal" Visibility="Visible">
                                            <Label Margin="0,5,0,5" Width="200" IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.IsEnabled, Mode=OneWay}">Master Identifier</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" IsEnabled="True" Width="400" Text="{Binding Path=SelectedItem.ResultRuleViewModel.MasterUUID, Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Visibility="Visible">
                                            <Label Margin="0,5,0,5" Width="200" IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.IsEnabled, Mode=OneWay}">Identifier</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" IsEnabled="True" Width="400" Text="{Binding Path=SelectedItem.ResultRuleViewModel.UUID, Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Visibility="Visible">
                                            <Label Margin="0,5,0,5" Width="200" IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.IsEnabled, Mode=OneWay}">Parent Identifier</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" IsEnabled="True" Width="400" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ParentUUID, Mode=OneWay}" />
                                        </StackPanel>
                                    </StackPanel>
                                </Expander>
                                <StackPanel x:Name="resultRuleTypeOptionsMags" Orientation="Horizontal" Margin="0,5,0,5" IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.IsEnabled, Mode=OneWay}">
                                    <Label Margin="0,0,0,5" Width="200">Magistrates Rule</Label>
                                    <StackPanel Orientation="Vertical" Margin="0,5,0,5">
                                        <RadioButton Content="Optional" GroupName="ResultRuleTypeMags" IsChecked="{Binding Mode=TwoWay, Path=SelectedItem.ResultRuleViewModel.RuleTypeMags, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static d:ResultDefinitionRuleType.optional}}" />
                                        <RadioButton Content="Mandatory" GroupName="ResultRuleTypeMags" IsChecked="{Binding Mode=TwoWay, Path=SelectedItem.ResultRuleViewModel.RuleTypeMags, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static d:ResultDefinitionRuleType.mandatory}}" />
                                        <RadioButton Content="At least One Of" GroupName="ResultRuleTypeMags" IsChecked="{Binding Mode=TwoWay, Path=SelectedItem.ResultRuleViewModel.RuleTypeMags, Converter={StaticResource enumBooleanConverter},ConverterParameter={x:Static d:ResultDefinitionRuleType.atleastOneOf}}" />
                                        <RadioButton Content="One Of" GroupName="ResultRuleTypeMags" IsChecked="{Binding Mode=TwoWay, Path=SelectedItem.ResultRuleViewModel.RuleTypeMags, Converter={StaticResource enumBooleanConverter},ConverterParameter={x:Static d:ResultDefinitionRuleType.oneOf}}" />
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel x:Name="resultRuleTypeOptionsCrown" Orientation="Horizontal" Margin="0,5,0,5" IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.IsEnabled, Mode=OneWay}">
                                    <Label Margin="0,0,0,5" Width="200">Crown Rule</Label>
                                    <StackPanel Orientation="Vertical" Margin="0,5,0,5">
                                        <RadioButton Content="Optional" GroupName="ResultRuleTypeCrown" IsChecked="{Binding Mode=TwoWay, Path=SelectedItem.ResultRuleViewModel.RuleTypeCrown, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static d:ResultDefinitionRuleType.optional}}" />
                                        <RadioButton Content="Mandatory" GroupName="ResultRuleTypeCrown" IsChecked="{Binding Mode=TwoWay, Path=SelectedItem.ResultRuleViewModel.RuleTypeCrown, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static d:ResultDefinitionRuleType.mandatory}}" />
                                        <RadioButton Content="At least One Of" GroupName="ResultRuleTypeCrown" IsChecked="{Binding Mode=TwoWay, Path=SelectedItem.ResultRuleViewModel.RuleTypeCrown, Converter={StaticResource enumBooleanConverter},ConverterParameter={x:Static d:ResultDefinitionRuleType.atleastOneOf}}" />
                                        <RadioButton Content="One Of" GroupName="ResultRuleTypeCrown" IsChecked="{Binding Mode=TwoWay, Path=SelectedItem.ResultRuleViewModel.RuleTypeCrown, Converter={StaticResource enumBooleanConverter},ConverterParameter={x:Static d:ResultDefinitionRuleType.oneOf}}" />
                                    </StackPanel>
                                </StackPanel>
                                <Expander Header="Audit">
                                    <StackPanel x:Name="rdrauditdates" Margin="10,5,0,0" Orientation="Vertical" IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.IsEnabled, Mode=OneWay}">
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Created</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultRuleViewModel.CreatedUser, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultRuleViewModel.CreatedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Modified</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultRuleViewModel.LastModifiedUser, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultRuleViewModel.LastModifiedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Deleted</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultRuleViewModel.DeletedUser, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultRuleViewModel.DeletedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Published Status</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultRuleViewModel.PublishedStatus, Converter={StaticResource enumStringConverter}, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultRuleViewModel.PublishedStatusDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal" Visibility="{Binding Path=SelectedItem.ResultRuleViewModel.IsRevision, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                            <Label Margin="0,5,0,5" Width="200" >Original Date Published</Label>
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultRuleViewModel.OriginalPublishedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                    </StackPanel>
                                </Expander>
                            </StackPanel>
                        </Expander>
                        <Separator Height="2" Visibility="{Binding SelectedResultDefinitionRuleVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}"/>
                        <Expander Header="Result Definition Details" IsExpanded="True">
                            <StackPanel Margin="10,5,0,0" >
                                <StackPanel IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.IsEnabled, Mode=OneWay}">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Result Definition Label</Label>
                                        <TextBox Name="RDLabelTextBox" Margin="0,5,0,5" Width="700"
            Validation.ErrorTemplate="{StaticResource ValidationTemplate}" Style="{StaticResource textBoxInError}">
                                            <TextBox.Text>
                                                <Binding Path="SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.Label" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" >
                                                    <Binding.ValidationRules>
                                                        <bv:UniqueRDLabelRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Welsh Result Definition Label</Label>
                                        <TextBox Margin="0,5,0,5" Width="700" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.WelshLabel, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Result Definition Group</Label>
                                        <TextBox Margin="0,5,0,5" Width="400" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.ResultDefinitionGroup, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Level</Label>
                                        <ComboBox ItemsSource="{Binding ResultDefinitionLevels}"                 
                        SelectedValue="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.Level, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        DisplayMemberPath="ValueString"
                        SelectedValuePath="ValueString"
                        Margin="0,5,0,5" Name="LevelComboBox" Width="200" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Is Business Result</Label>
                                        <CheckBox Margin="0,5,0,5" Width="25" Height="15" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.IsBusinessResult, Mode=TwoWay}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Judicial Validation Required</Label>
                                        <CheckBox Margin="0,5,0,5" Width="25" Height="15" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.JudicialValidation, Mode=TwoWay}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Is Boolean Result</Label>
                                        <CheckBox Margin="0,5,0,5" Width="25" Height="15" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.IsBooleanResult, Mode=TwoWay}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Short Code</Label>
                                        <TextBox Margin="0,5,0,5" Width="100" IsReadOnly="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.IsShortCodeReadOnly}" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.ShortCode, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">CJS Code</Label>
                                        <TextBox Margin="0,5,0,5" Width="100" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.CJSCode, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.SecondaryCJSCodesVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Secondary CJS Codes</Label>
                                        <ListView Margin="0,5,0,5" x:Name="rd_SecondaryCJSCodes"
                                        HorizontalAlignment="Left"
                                        Width="Auto"
                                        Height="100"
                                        VerticalContentAlignment="Top"
                                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                                        ItemsSource="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.SecondaryCJSCodes, Mode=OneWay, UpdateSourceTrigger=LostFocus}" 
                                        SelectedItem="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.SelectedSecondaryCJSCode, Mode=TwoWay}">
                                            <ListView.View>
                                                <GridView>
                                                    <GridViewColumn Header="Secondary CJS Code" Width="Auto">
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBox Margin="0,5,0,0" Width="150" AcceptsReturn="True"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                Height="50" Text="{Binding CJSCode, Mode=TwoWay}" />
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                    <GridViewColumn Header="Text" Width="Auto">
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBox Margin="0,5,0,0" Width="500" AcceptsReturn="True" TextWrapping="WrapWithOverflow" 
                                                                VerticalScrollBarVisibility="Auto" Height="50"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                Text="{Binding Text, Mode=TwoWay}" />
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                </GridView>
                                            </ListView.View>
                                            <ListView.ContextMenu>
                                                <ContextMenu Name="SecondaryCJSCodesMenu">
                                                    <MenuItem Header="Add New Secondary CJSCode" Command="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.AddSecondaryCJSCodeCommand}"/>
                                                    <MenuItem Header="Delete Selected Secondary CJSCode" Command="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.DeleteSecondaryCJSCodeCommand}"/>
                                                </ContextMenu>
                                            </ListView.ContextMenu>
                                        </ListView>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">DVLA Code</Label>
                                        <TextBox Margin="0,5,0,5" Width="100" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.DVLACode, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Points Disqualification Code</Label>
                                        <TextBox Margin="0,5,0,5" Width="100" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PointsDisqualificationCode, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Libra Codes</Label>
                                        <TextBox Margin="0,5,0,5" Width="500" TextWrapping="WrapWithOverflow" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Height="100" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.LibraCode, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5"  Width="200">L Code</Label>
                                        <TextBox Margin="0,5,0,5" Width="100" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.LCode, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Category</Label>
                                        <ComboBox ItemsSource="{Binding ResultDefinitionCategories}"                 
                        SelectedValue="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.Category, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        DisplayMemberPath="ValueString"
                        SelectedValuePath="ValueString"
                        Margin="0,5,0,5" Name="CategoryComboBox" Width="200" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Qualifier</Label>
                                        <TextBox Margin="0,5,0,5" Width="100" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.Qualifier, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Post Hearing Custody Status</Label>
                                        <ComboBox ItemsSource="{Binding PostHearingCustodyStatus}"                 
                        SelectedValue="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PostHearingCustodyStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        DisplayMemberPath="ValueString"
                        SelectedValuePath="CodeString"                                  
                        Margin="0,5,0,5" Name="PostHearingCustodyStatusComboBox" Width="300" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Jurisdiction</Label>
                                        <ComboBox ItemsSource="{Binding Jurisdictions}"                 
                        SelectedValue="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.Jurisdiction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        DisplayMemberPath="ValueString"
                        SelectedValuePath="ValueString"
                        Margin="0,5,0,5" Name="JurisdictionComboBox" Width="200" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Rank</Label>
                                        <TextBox Margin="0,5,0,5" Width="100" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.Rank, Mode=TwoWay, TargetNullValue=''}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Stipulated Driving Test</Label>
                                        <ComboBox ItemsSource="{Binding StipulatedDrivingTestOptions}"                 
                                SelectedValue="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.StipulatedDrivingTestType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                DisplayMemberPath="ValueString"
                                SelectedValuePath="ValueString"
                                Margin="0,5,0,5" Name="StipulatedDrivingTestComboBox" Width="200" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Result Wording</Label>
                                        <TextBox Margin="0,5,0,5" Width="700" TextWrapping="WrapWithOverflow" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Height="100" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.ResultWording, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Welsh Result Wording</Label>
                                        <TextBox Margin="0,5,0,5" Width="700" TextWrapping="WrapWithOverflow" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Height="100" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.WelshResultWording, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Triggered Application Code</Label>
                                        <TextBox Margin="0,5,0,5" Width="100" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.TriggeredApplicationCode, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.UserGroupsVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">User Groups</Label>
                                        <ListView Margin="0,5,0,5" x:Name="rd_AvailableUserGroup" ItemsSource="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.AvailableUserGroups, Mode=OneWay, UpdateSourceTrigger=LostFocus}" SelectedItem="{Binding SelectedAvailableResultDefinitionUserGroup, Mode=TwoWay}">
                                            <ListView.View>
                                                <GridView>
                                                    <GridViewColumn Header="Visible To" Width="250" DisplayMemberBinding="{Binding Path=., Mode=TwoWay}"/>
                                                </GridView>
                                            </ListView.View>
                                        </ListView>
                                        <StackPanel Orientation="Vertical" Margin="0,5,0,5" IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.IsEnabled, Mode=OneWay}">
                                            <Button Name="btnRDAddUser" Height="30" Margin="15,10,15,5" Padding="8,0"  IsEnabled="{Binding AddResultDefinitionUserGroupEnabled, FallbackValue=false}" Click="btnRDAddUser_Click">Add >></Button>
                                            <Button Name="btnRDRemoveUser" Height="30" Margin="15,5,15,5" Padding="8,0" IsEnabled="{Binding RemoveResultDefinitionUserGroupEnabled, FallbackValue=false}" Click="btnRDRemoveUser_Click">&lt;&lt; Remove</Button>
                                        </StackPanel>
                                        <ListView Margin="0,5,0,5" x:Name="rdSelectedUserGroup" ItemsSource="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.UserGroups, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" SelectedItem="{Binding SelectedResultDefinitionUserGroup, Mode=TwoWay}">
                                            <ListView.View>
                                                <GridView >
                                                    <GridViewColumn Header="Not Visible To" Width="250" DisplayMemberBinding="{Binding Path=., Mode=TwoWay}"/>
                                                </GridView>
                                            </ListView.View>
                                        </ListView>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Cache For Resulting</Label>
                                        <ComboBox ItemsSource="{Binding CachableOptions}"                 
                        SelectedValue="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.Cachable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        DisplayMemberPath="ValueString"
                        SelectedValuePath="ValueString"
                        Margin="0,5,0,5" Name="CachableResultComboBox" Width="200" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Cache Data Path</Label>
                                        <TextBox Margin="0,5,0,5" Width="700" TextWrapping="WrapWithOverflow" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Height="100" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.CacheDataPath, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.ResultTextTemplateVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Result Text Template</Label>
                                        <TextBox Margin="0,5,0,5" Width="700" TextWrapping="WrapWithOverflow" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Height="100" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.ResultTextTemplate, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Dependant Definition Group</Label>
                                        <TextBox Name="DependantRDGTextBox" Margin="0,5,0,5" Width="400" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" Style="{StaticResource textBoxInError}">
                                            <TextBox.Text>
                                                <Binding Path="SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.DependantResultDefinitionGroup" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" >
                                                    <Binding.ValidationRules>
                                                        <bv:ResultDefinitionGroupExistsRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <WrapPanel x:Name="rddates" Margin="0,10,0,10">
                                        <Label Margin="0,5,0,5" Width="200">Start Date</Label>
                                        <DatePicker Margin="0,5,0,5" SelectedDate="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.StartDate, Mode=TwoWay, TargetNullValue=''}" />
                                        <Label Margin="10,5,0,5">End Date</Label>
                                        <DatePicker Margin="0,5,0,5" SelectedDate="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.EndDate, Mode=TwoWay, TargetNullValue=''}" />
                                    </WrapPanel>
                                    <WrapPanel x:Name="resultCheckBoxes1" Margin="200,0,0,10">
                                        <Label Margin="0,5,0,5">Adjournment</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.Adjournment, Mode=TwoWay}"/>
                                        <Label Margin="10,5,0,5">Financial</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.Financial, Mode=TwoWay}"/>
                                        <Label Margin="10,5,0,5">Urgent</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.Urgent, Mode=TwoWay}"/>
                                        <Label Margin="10,5,0,5">Convicted</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.Convicted, Mode=TwoWay}"/>
                                        <Label Margin="10,5,0,5">D20</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.D20, Mode=TwoWay}"/>
                                        <Label Margin="10,5,0,5">Available For Court Extract</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.IsAvailableForCourtExtract, Mode=TwoWay}"/>
                                        <Label Margin="10,5,0,5">Is Life Duration</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.IsLifeDuration, Mode=TwoWay}"/>
                                        <Label Margin="10,5,0,5">Terminates Offence Proceedings</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.TerminatesOffenceProceedings, Mode=TwoWay}"/>
                                    </WrapPanel>
                                    <WrapPanel x:Name="resultCheckBoxes2" Margin="200,0,0,0">
                                        <Label Margin="0,5,0,5">Unscheduled</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.Unscheduled, Mode=TwoWay}"/>
                                        <Label Margin="10,5,0,5">Can Be Subject Of Breach Proceedings</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.CanBeSubjectOfBreach, Mode=TwoWay}"/>
                                        <Label Margin="10,5,0,5">Can Be Subject Of Variation Application</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.CanBeSubjectOfVariation, Mode=TwoWay}"/>
                                    </WrapPanel>
                                    <WrapPanel x:Name="sharingRulesCheckBoxes" Margin="0,10,0,10">
                                        <Label Margin="0,5,0,5" Width="200" >Sharing Rules</Label>
                                        <Label Margin="0,5,0,5">Published As A Prompt</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublishedAsAPromptEnabled, Mode=OneWay}" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublishedAsAPrompt, Mode=TwoWay}"/>
                                        <Label Margin="10,5,0,5">Excluded From Results</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.ExcludedFromResults, Mode=TwoWay}"/>
                                        <Label Margin="10,5,0,5">Always Published</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.AlwaysPublished, Mode=TwoWay}"/>
                                        <Label Margin="10,5,0,5">Rollup Prompts</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.RollupPromptsEnabled, Mode=OneWay}" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.RollupPrompts, Mode=TwoWay}"/>
                                        <Label Margin="10,5,0,5">Published For NOWs</Label>
                                        <CheckBox Margin="0,5,0,5" Width="15" Height="15" IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublishedForNowsEnabled}" IsChecked="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublishedForNows, Mode=TwoWay}"/>
                                    </WrapPanel>
                                </StackPanel>
                                <Expander Header="Activity">
                                    <StackPanel>
                                        <ListView Margin="10,5,0,5" x:Name="rd_Comments"
                                        HorizontalAlignment="Left"
                                        Width="Auto"
                                        Height="Auto"
                                        MinHeight="100"
                                        MaxHeight="500"
                                        VerticalContentAlignment="Top"  
                                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                                        ItemsSource="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.AssociatedCommentsModel.Comments, Mode=OneWay, UpdateSourceTrigger=LostFocus}" 
                                        SelectedItem="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.AssociatedCommentsModel.SelectedComment, Mode=TwoWay}">
                                            <ListView.View>
                                                <GridView>
                                                    <GridViewColumn Header="Comment" Width="610">
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBox Margin="0,5,0,5" Width="590" TextWrapping="WrapWithOverflow" AcceptsReturn="True"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneTime}"
                                                                VerticalScrollBarVisibility="Auto" MaxHeight="250" Height="Auto" Text="{Binding Note, Mode=TwoWay}" />
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                    <GridViewColumn Header="Made By" Width="Auto">
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBlock VerticalAlignment="Top" Width="Auto" x:Name="madeby" Text="{Binding MadeBy, Mode=OneWay}" Margin="5,0,0,0" />
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                </GridView>
                                            </ListView.View>
                                            <ListView.ContextMenu>
                                                <ContextMenu Name="CommentsMenu" Visibility="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.AssociatedCommentsModel.IsEnabled, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                                    <MenuItem Header="Add New Comment" Command="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.AssociatedCommentsModel.AddCommentCommand}"/>
                                                    <MenuItem Header="Delete Selected Comment" Command="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.AssociatedCommentsModel.DeleteCommentCommand}"/>
                                                </ContextMenu>
                                            </ListView.ContextMenu>
                                        </ListView>
                                    </StackPanel>
                                </Expander>
                                <Expander Header="Audit">
                                    <StackPanel x:Name="rdauditdates" Margin="10,5,0,0" Orientation="Vertical" IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.IsEnabled, Mode=OneWay}">
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Created</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.CreatedUser, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.CreatedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Modified</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.LastModifiedUser, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.LastModifiedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Deleted</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.DeletedUser, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.DeletedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Published Status</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublishedStatus, Converter={StaticResource enumStringConverter}, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublishedStatusDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal" Visibility="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.IsRevision, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                            <Label Margin="0,5,0,5" Width="200">Original Date Published</Label>
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.OriginalPublishedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200">Publication Tags</Label>
                                            <ListView Margin="0,5,0,5" x:Name="rd_PublicationTags" 
                                    Visibility="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" 
                                    ItemsSource="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublicationTagsModel.AvailablePublicationTags, Mode=OneWay, UpdateSourceTrigger=LostFocus}" 
                                    SelectedItem="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublicationTagsModel.SelectedAvailableTag, Mode=TwoWay}">
                                                <ListView.View>
                                                    <GridView>
                                                        <GridViewColumn Header="Available Tags" Width="250" DisplayMemberBinding="{Binding Path=., Mode=TwoWay}"/>
                                                    </GridView>
                                                </ListView.View>
                                            </ListView>
                                            <StackPanel Orientation="Vertical" Margin="0,5,0,5" Visibility="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                                <Button Name="rd_btnAddPublicationTag" Height="30" Margin="15,10,15,5" Padding="8,0"  
                                        IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublicationTagsModel.AddTagEnabled, FallbackValue=false}" 
                                        Command="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublicationTagsModel.AddTagCommand}">Add >></Button>
                                                <Button Name="rd_btnRemovePublicationTag" Height="30" Margin="15,5,15,5" Padding="8,0" 
                                        IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublicationTagsModel.RemoveTagEnabled, FallbackValue=false}" 
                                        Command="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublicationTagsModel.RemoveTagCommand}">&lt;&lt; Remove</Button>
                                            </StackPanel>
                                            <ListView Margin="0,5,0,5" x:Name="rd_SelectedPublicationTags" 
                                    ItemsSource="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublicationTagsModel.SelectedPublicationTags, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
                                    SelectedItem="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublicationTagsModel.SelectedTag, Mode=TwoWay}">
                                                <ListView.View>
                                                    <GridView >
                                                        <GridViewColumn Header="Selected Tags" Width="250" DisplayMemberBinding="{Binding Path=., Mode=TwoWay}"/>
                                                    </GridView>
                                                </ListView.View>
                                            </ListView>
                                        </StackPanel>
                                        <StackPanel Margin="200,0,0,0" 
                                        Orientation="Horizontal" 
                                        Visibility="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                            <TextBox Margin="0,5,0,5" Width="250" 
                                            Text="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublicationTagsModel.NewTag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Button Name="btnNewTag"
                                        IsEnabled="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublicationTagsModel.AddNewTagEnabled, FallbackValue=false}" 
                                        HorizontalAlignment="Left" Height="30" Width="100" Margin="20,5,0,5" 
                                        Padding="8,0" Command="{Binding Path=SelectedItem.ResultRuleViewModel.ChildResultDefinitionViewModel.PublicationTagsModel.AddNewTagCommand}">Add New Tag</Button>
                                        </StackPanel>
                                    </StackPanel>
                                </Expander>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>

                <ScrollViewer Grid.Column="6" Grid.Row="0" Grid.RowSpan="2" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Visibility="{Binding SelectedResultPromptVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                    <StackPanel Grid.Column="6" Grid.Row="0" Grid.RowSpan="2" Orientation="Vertical" Visibility="{Binding SelectedResultPromptVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Name="resultPrompt" >
                        <Label  Height="30" Content="Result Prompt" FontWeight="SemiBold" Background="LightGray" IsEnabled="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.IsEnabled, Mode=OneWay}"/>
                        <Expander Header="Identifiers">
                            <StackPanel Margin="10,5,0,0">
                                <StackPanel Orientation="Horizontal" Visibility="Visible">
                                    <Label Margin="0,5,0,5" Width="200" IsEnabled="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.IsEnabled, Mode=OneWay}">Master Identifier</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="400" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.MasterUUID, Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Visibility="Visible">
                                    <Label Margin="0,5,0,5" Width="200" IsEnabled="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.IsEnabled, Mode=OneWay}">Identifier</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="400" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.UUID, Mode=OneWay}" />
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                        <Separator Height="2"/>
                        <Expander Header="Result Prompt Rule" IsExpanded="True">
                            <StackPanel Orientation="Vertical" Margin="10,5,0,0">
                                <Expander Header="Rule Identifiers">
                                    <StackPanel Margin="10,5,0,0">
                                        <StackPanel Orientation="Horizontal" Visibility="Visible">
                                            <Label Margin="0,5,0,5" IsEnabled="{Binding Path=SelectedItem.ResultPromptRuleViewModel.IsEnabled, Mode=OneWay}" Width="200">Master Identifier</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" IsEnabled="True" Width="400" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.MasterUUID, Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" IsEnabled="{Binding Path=SelectedItem.ResultPromptRuleViewModel.IsEnabled, Mode=OneWay}" Width="200">Identifier</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" IsEnabled="True" Width="400" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.UUID, Mode=OneWay}" />
                                        </StackPanel>
                                    </StackPanel>
                                </Expander>
                                <StackPanel Orientation="Horizontal" IsEnabled="{Binding Path=SelectedItem.ResultPromptRuleViewModel.IsEnabled, Mode=OneWay}">
                                    <Label Margin="0,5,0,5" Width="200">Prompt Sequence</Label>
                                    <TextBox Margin="0,5,0,5" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.PromptSequence, Mode=TwoWay, TargetNullValue=''}" Width="100" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" IsEnabled="{Binding Path=SelectedItem.ResultPromptRuleViewModel.IsEnabled, Mode=OneWay}">
                                    <Label Margin="0,0,0,5" Width="200">Magistrates Rule</Label>
                                    <StackPanel x:Name="resultPromptRuleTypeOptionsMags" Orientation="Vertical" Margin="0,5,0,5">
                                        <RadioButton Content="Optional" GroupName="ResultPromptRuleTypeMags" IsChecked="{Binding Mode=TwoWay, Path=SelectedItem.ResultPromptRuleViewModel.RuleTypeMags, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static d:ResultPromptRuleType.optional}}" />
                                        <RadioButton Content="Mandatory" GroupName="ResultPromptRuleTypeMags" IsChecked="{Binding Mode=TwoWay, Path=SelectedItem.ResultPromptRuleViewModel.RuleTypeMags, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static d:ResultPromptRuleType.mandatory}}" />
                                        <RadioButton Content="One Of" GroupName="ResultPromptRuleTypeMags" IsChecked="{Binding Mode=TwoWay, Path=SelectedItem.ResultPromptRuleViewModel.RuleTypeMags, Converter={StaticResource enumBooleanConverter},ConverterParameter={x:Static d:ResultPromptRuleType.oneOf}}" />
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" IsEnabled="{Binding Path=SelectedItem.ResultPromptRuleViewModel.IsEnabled, Mode=OneWay}">
                                    <Label Margin="0,0,0,5" Width="200">Crown Rule</Label>
                                    <StackPanel x:Name="resultPromptRuleTypeOptionsCrown" Orientation="Vertical" Margin="0,5,0,5">
                                        <RadioButton Content="Optional" GroupName="ResultPromptRuleTypeCrown" IsChecked="{Binding Mode=TwoWay, Path=SelectedItem.ResultPromptRuleViewModel.RuleTypeCrown, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static d:ResultPromptRuleType.optional}}" />
                                        <RadioButton Content="Mandatory" GroupName="ResultPromptRuleTypeCrown" IsChecked="{Binding Mode=TwoWay, Path=SelectedItem.ResultPromptRuleViewModel.RuleTypeCrown, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static d:ResultPromptRuleType.mandatory}}" />
                                        <RadioButton Content="One Of" GroupName="ResultPromptRuleTypeCrown" IsChecked="{Binding Mode=TwoWay, Path=SelectedItem.ResultPromptRuleViewModel.RuleTypeCrown, Converter={StaticResource enumBooleanConverter},ConverterParameter={x:Static d:ResultPromptRuleType.oneOf}}" />
                                    </StackPanel>
                                </StackPanel>                                
                                <StackPanel Orientation="Horizontal" IsEnabled="{Binding Path=SelectedItem.ResultPromptRuleViewModel.IsEnabled, Mode=OneWay}">
                                    <Label Margin="0,0,0,5" Width="200">User Groups</Label>
                                    <ListView Margin="0,5,0,5" x:Name="AvailableUserGroup" ItemsSource="{Binding Path=SelectedItem.ResultPromptRuleViewModel.AvailableUserGroups, Mode=OneWay, UpdateSourceTrigger=LostFocus}" SelectedItem="{Binding SelectedAvailablePromptRuleUserGroup, Mode=TwoWay}">
                                        <ListView.View>
                                            <GridView >
                                                <GridViewColumn Header="Visible To" Width="250" DisplayMemberBinding="{Binding Path=., Mode=TwoWay}"/>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                    <StackPanel Orientation="Vertical" Margin="0,5,0,5">
                                        <Button Name="btnAddUser" Height="30" Margin="15,10,15,5" Padding="8,0" IsEnabled="{Binding AddPromptRuleUserGroupEnabled, FallbackValue=false}" Click="btnAddUser_Click">Add >></Button>
                                        <Button Name="btnRemoveUser" Height="30" Margin="15,5,15,5" Padding="8,0" IsEnabled="{Binding RemovePromptRuleUserGroupEnabled, FallbackValue=false}" Click="btnRemoveUser_Click">&lt;&lt; Remove</Button>
                                    </StackPanel>
                                    <ListView Margin="0,5,0,5" x:Name="SelectedUserGroup" ItemsSource="{Binding Path=SelectedItem.ResultPromptRuleViewModel.UserGroups, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" SelectedItem="{Binding SelectedPromptRuleUserGroup, Mode=TwoWay}">
                                        <ListView.View>
                                            <GridView >
                                                <GridViewColumn Header="Not Visible To" Width="250" DisplayMemberBinding="{Binding Path=., Mode=TwoWay}"/>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                </StackPanel>
                                <Expander Header="Audit">
                                    <StackPanel x:Name="promptruleauditdates" Margin="10,5,0,0" Orientation="Vertical" IsEnabled="{Binding Path=SelectedItem.ResultPromptRuleViewModel.IsEnabled, Mode=OneWay}">
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Created</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.CreatedUser, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.CreatedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Modified</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.LastModifiedUser, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.LastModifiedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Deleted</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.DeletedUser, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.DeletedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Published Status</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.PublishedStatus, Converter={StaticResource enumStringConverter}, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.PublishedStatusDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal" Visibility="{Binding Path=SelectedItem.ResultPromptRuleViewModel.IsRevision, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                            <Label Margin="0,5,0,5" Width="200" >Original Date Published</Label>
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.OriginalPublishedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                    </StackPanel>
                                </Expander>
                            </StackPanel>
                        </Expander>
                        <Separator Height="2"/>
                        <Expander Header="Result Prompt Details">
                            <StackPanel Margin="10,5,0,0">
                                <StackPanel IsEnabled="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.IsEnabled, Mode=OneWay}">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Result Prompt Label</Label>
                                        <TextBox Margin="0,5,0,5" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.Label, Mode=TwoWay}" Width="700" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Welsh Result Prompt Label</Label>
                                        <TextBox Margin="0,5,0,5" Width="700" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.WelshLabel, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Result Prompt Group</Label>
                                        <TextBox Margin="0,5,0,5" Width="500" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.ResultPromptGroup, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Prompt Reference</Label>
                                        <TextBox Margin="0,5,0,5" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.PromptReference, Mode=TwoWay}" Width="700" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Prompt Type</Label>
                                        <ComboBox ItemsSource="{Binding ResultPromptTypes}"                 
                        SelectedValue="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.PromptType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        DisplayMemberPath="ValueString"
                        SelectedValuePath="ValueString"
                        Margin="0,5,0,5" Name="PromptTypeComboBox" Width="200" />
                                    </StackPanel>
                                    <WrapPanel Orientation="Horizontal" Visibility="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.NameAddressVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Name Address Type</Label>
                                        <ComboBox ItemsSource="{Binding NameAddressTypes}"                 
                        SelectedValue="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.NameAddressType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        DisplayMemberPath="ValueString"
                        SelectedValuePath="ValueString"
                        Margin="0,5,0,5" Name="NameAddressTypeComboBox" Width="200" />
                                        <Label Margin="30,5,0,5" Width="120">Name &amp; Email</Label>
                                        <CheckBox Margin="0,5,0,5" IsEnabled="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.IsEnabled, Mode=OneWay}" Width="25" Height="15" IsChecked="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.NameEmail, Mode=TwoWay}"/>
                                    </WrapPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Judicial Validation Required</Label>
                                        <CheckBox Margin="0,5,0,5" Width="25" Height="15" IsChecked="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.JudicialValidation, Mode=TwoWay}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Associate To Reference Data</Label>
                                        <CheckBox Margin="0,5,0,5" Width="25" Height="15" IsChecked="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.AssociateToReferenceData, Mode=TwoWay}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.FixedListUUIDVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Fixed List ID</Label>
                                        <TextBox Margin="0,5,0,5" IsReadOnly="True" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.FixedListUUID, Mode=OneWay}" Width="300" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.FixedListLabelVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Fixed List Label</Label>
                                        <TextBox Margin="0,5,0,5" IsReadOnly="True" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.FixedListLabel, Mode=OneWay}" Width="200" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Min</Label>
                                        <TextBox Margin="0,5,0,5" Width="100" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.Min, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Max</Label>
                                        <TextBox Margin="0,5,0,5" Width="100" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.Max, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Qualifier</Label>
                                        <TextBox Margin="0,5,0,5" Width="100" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.Qual, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Jurisdiction</Label>
                                        <ComboBox ItemsSource="{Binding Jurisdictions}"                 
                        SelectedValue="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.Jurisdiction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        DisplayMemberPath="ValueString"
                        SelectedValuePath="ValueString"
                        Margin="0,5,0,5" Name="ResultPromptJurisdictionComboBox" Width="200" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Regular Expression</Label>
                                        <TextBox Margin="0,5,0,5" Width="700" IsReadOnly="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.IsReadOnly, Mode=OneWay}" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.RegularExpression, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Cache For Resulting</Label>
                                        <ComboBox ItemsSource="{Binding CachableOptions}"                 
                        SelectedValue="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.Cachable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        DisplayMemberPath="ValueString"
                        SelectedValuePath="ValueString"
                        Margin="0,5,0,5" Name="CachablePromptComboBox" Width="200" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Cache Data Path</Label>
                                        <TextBox Margin="0,5,0,5" Width="700" TextWrapping="WrapWithOverflow" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Height="100" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.CacheDataPath, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.IsIntPromptType, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Duration Element</Label>
                                        <ListView Margin="0,5,0,5" x:Name="rp_DurationElements"
                                        HorizontalAlignment="Left"
                                        Width="Auto"
                                        Height="Auto"
                                        MinHeight="100"
                                        VerticalContentAlignment="Top"  
                                        ItemsSource="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.DurationElements, Mode=OneWay, UpdateSourceTrigger=LostFocus}" 
                                        SelectedItem="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.SelectedDurationElement, Mode=TwoWay}">
                                            <ListView.View>
                                                <GridView>
                                                    <GridViewColumn Header="Duration" Width="210">
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBox Margin="0,5,0,0" Width="190" AcceptsReturn="True"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneTime}"
                                                                Height="Auto" Text="{Binding DurationElement, Mode=TwoWay}" />
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                    <GridViewColumn Header="Welsh Duration" Width="210">
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBox Margin="0,5,0,0" Width="190" AcceptsReturn="True"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneTime}"
                                                                Height="Auto" Text="{Binding WelshDurationElement, Mode=TwoWay}" />
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                </GridView>
                                            </ListView.View>
                                            <ListView.ContextMenu>
                                                <ContextMenu Name="DurationElementsMenu">
                                                    <MenuItem Header="Add New Duration" Command="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.AddDurationElementCommand}"/>
                                                    <MenuItem Header="Delete Selected Duration" Command="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.DeleteDurationElementCommand}"/>
                                                </ContextMenu>
                                            </ListView.ContextMenu>
                                        </ListView>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.IsIntPromptType, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Duration Sequence</Label>
                                        <TextBox Name="DurationSequence" Margin="0,5,0,5" Width="20" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" Style="{StaticResource textBoxInError}">
                                            <TextBox.Text>
                                                <Binding ValidatesOnDataErrors="True" Path="SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.DurationSequenceString" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" >
                                                    <Binding.ValidationRules>
                                                        <bv:DurationSequenceRule Min="1" Max="3"/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </StackPanel>
                                    <WrapPanel x:Name="durationDates" Visibility="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.IsDatePromptType, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Label Margin="0,5,0,5" Width="200">Is Duration Start Date?</Label>
                                        <CheckBox Margin="0,5,0,5" Width="25" Height="15" IsChecked="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.IsDurationStartDate, Mode=TwoWay}"/>
                                        <Label Margin="0,5,0,5">Is Duration End Date?</Label>
                                        <CheckBox Margin="0,5,0,5" Width="25" Height="15" IsChecked="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.IsDurationEndDate, Mode=TwoWay}"/>
                                    </WrapPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Wording</Label>
                                        <TextBox Margin="0,5,0,5" Width="700" TextWrapping="WrapWithOverflow" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Height="100" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.Wording, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Margin="0,5,0,5" Width="200">Welsh Wording</Label>
                                        <TextBox Margin="0,5,0,5" Width="700" TextWrapping="WrapWithOverflow" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Height="100" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.WelshWording, Mode=TwoWay}" />
                                    </StackPanel>
                                    <WrapPanel x:Name="promptCheckBoxes" Margin="0,10,0,10">
                                        <Label Margin="0,5,0,5" Width="200">Available For Court Extract</Label>
                                        <CheckBox Margin="0,5,0,5" Width="25" Height="15" IsChecked="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.IsAvailableForCourtExtract, Mode=TwoWay}"/>
                                        <Label Margin="0,5,0,5">Is Financial</Label>
                                        <CheckBox Margin="0,5,0,5" Width="25" Height="15" IsChecked="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.Financial, Mode=TwoWay}"/>
                                        <Label Margin="0,5,0,5">Is Hidden</Label>
                                        <CheckBox Margin="0,5,0,5" Width="25" Height="15" IsChecked="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.Hidden, Mode=TwoWay}"/>
                                    </WrapPanel>
                                </StackPanel>
                                <Expander Header="Activity">
                                    <StackPanel>
                                        <ListView Margin="10,5,0,5" x:Name="rp_Comments"
                                            HorizontalAlignment="Left"
                                            Width="Auto"
                                            Height="Auto"
                                            MinHeight="100"
                                            MaxHeight="500"
                                            VerticalContentAlignment="Top"  
                                            ScrollViewer.VerticalScrollBarVisibility="Visible"
                                            ItemsSource="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.AssociatedCommentsModel.Comments, Mode=OneWay, UpdateSourceTrigger=LostFocus}" 
                                            SelectedItem="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.AssociatedCommentsModel.SelectedComment, Mode=TwoWay}">
                                            <ListView.View>
                                                <GridView>
                                                    <GridViewColumn Header="Comment" Width="610">
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBox Margin="0,5,0,5" Width="590" TextWrapping="WrapWithOverflow" AcceptsReturn="True"
                                                                    IsReadOnly="{Binding IsReadOnly, Mode=OneTime}"
                                                                    VerticalScrollBarVisibility="Auto" MaxHeight="250" Height="Auto" Text="{Binding Note, Mode=TwoWay}" />
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                    <GridViewColumn Header="Made By" Width="Auto">
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBlock VerticalAlignment="Top" Width="Auto" x:Name="madeby" Text="{Binding MadeBy, Mode=OneWay}" Margin="5,0,0,0" />
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                </GridView>
                                            </ListView.View>
                                            <ListView.ContextMenu>
                                                <ContextMenu Name="prompt_CommentsMenu" Visibility="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.AssociatedCommentsModel.IsEnabled, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                                    <MenuItem Header="Add New Comment" Command="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.AssociatedCommentsModel.AddCommentCommand}"/>
                                                    <MenuItem Header="Delete Selected Comment" Command="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.AssociatedCommentsModel.DeleteCommentCommand}"/>
                                                </ContextMenu>
                                            </ListView.ContextMenu>
                                        </ListView>
                                    </StackPanel>
                                </Expander>
                                <Expander Header="Audit">
                                    <StackPanel x:Name="promptauditdates" Margin="10,5,0,0" Orientation="Vertical" IsEnabled="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.IsEnabled, Mode=OneWay}">
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Created</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.CreatedUser, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.CreatedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Modified</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.LastModifiedUser, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.LastModifiedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Deleted</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.DeletedUser, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.DeletedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                            <Label Margin="0,5,0,5" Width="200" >Published Status</Label>
                                            <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.PublishedStatus, Converter={StaticResource enumStringConverter}, Mode=OneWay}" />
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.PublishedStatusDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                        <StackPanel Margin="0,0,0,0" Orientation="Horizontal" Visibility="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.IsRevision, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                            <Label Margin="0,5,0,5" Width="200" >Original Date Published</Label>
                                            <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultPromptRuleViewModel.ResultPromptViewModel.OriginalPublishedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                        </StackPanel>
                                    </StackPanel>
                                </Expander>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>

                <ScrollViewer Grid.Column="6" Grid.Row="0" Grid.RowSpan="2" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Visibility="{Binding SelectedFixedListVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                    <StackPanel Grid.Column="6" Grid.Row="0" Grid.RowSpan="2" Orientation="Vertical" Visibility="{Binding SelectedFixedListVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Name="fixedList" >
                        <Label  Height="30" Content="Result Prompt Fixed List" FontWeight="SemiBold" Background="LightGray" IsEnabled="{Binding Path=SelectedItem.FixedListViewModel.IsEnabled, Mode=OneWay}"/>
                        <Expander Header="Identifiers">
                            <StackPanel Margin="10,5,0,0">
                                <StackPanel Orientation="Horizontal" Visibility="Visible">
                                    <Label Margin="0,5,0,5" Width="200" IsEnabled="{Binding Path=SelectedItem.FixedListViewModel.IsEnabled, Mode=OneWay}">Master Identifier</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="400" Text="{Binding Path=SelectedItem.FixedListViewModel.MasterUUID, Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Visibility="Visible">
                                    <Label Margin="0,5,0,5" Width="200" IsEnabled="{Binding Path=SelectedItem.FixedListViewModel.IsEnabled, Mode=OneWay}">Identifier</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="400" Text="{Binding Path=SelectedItem.FixedListViewModel.UUID, Mode=OneWay}" />
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                        <Separator Height="2"/>
                        <StackPanel Orientation="Horizontal" IsEnabled="{Binding Path=SelectedItem.FixedListViewModel.IsEnabled, Mode=OneWay}">
                            <Label Margin="0,5,0,5" Width="100">Label</Label>
                            <TextBox Margin="0,5,0,5" Text="{Binding Path=SelectedItem.FixedListViewModel.Label, Mode=TwoWay}" Width="300" />
                        </StackPanel>
                        <WrapPanel x:Name="fldates" Margin="0,10,0,10" IsEnabled="{Binding Path=SelectedItem.FixedListViewModel.IsEnabled, Mode=OneWay}">
                            <Label Margin="0,5,0,5" Width="100" >Start Date</Label>
                            <DatePicker Margin="0,5,0,5" SelectedDate="{Binding Path=SelectedItem.FixedListViewModel.StartDate, Mode=TwoWay, TargetNullValue=''}" />
                            <Label Margin="100,5,0,5">End Date</Label>
                            <DatePicker Margin="0,5,0,5" SelectedDate="{Binding Path=SelectedItem.FixedListViewModel.EndDate, Mode=TwoWay, TargetNullValue=''}" />
                        </WrapPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Margin="0,5,0,5" Width="100">Values</Label>
                            <ListView Margin="0,5,0,5" x:Name="rp_FixedList"
                                        HorizontalAlignment="Left"
                                        Width="Auto"
                                        Height="Auto"
                                        MinHeight="50"
                                        MaxHeight="500"
                                        VerticalContentAlignment="Top"
                                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                                        ItemsSource="{Binding Path=SelectedItem.FixedListViewModel.FixedListValues, Mode=OneWay, UpdateSourceTrigger=LostFocus}" 
                                        SelectedItem="{Binding Path=SelectedItem.FixedListViewModel.SelectedFixedListValue, Mode=TwoWay}">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Code" Width="Auto">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Margin="0,5,0,5" Width="100" AcceptsReturn="True" MinHeight="40" TextWrapping="WrapWithOverflow"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                Height="Auto" Text="{Binding Code, Mode=TwoWay}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Value" Width="Auto">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Margin="0,5,0,5" Width="300" AcceptsReturn="True" MinHeight="40" TextWrapping="WrapWithOverflow"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                Height="Auto" Text="{Binding Value, Mode=TwoWay}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="Welsh Value" Width="Auto">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Margin="0,5,0,5" Width="300" AcceptsReturn="True" MinHeight="40" TextWrapping="WrapWithOverflow"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                Height="Auto" Text="{Binding WelshValue, Mode=TwoWay}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="CJS Qualifier" Width="130">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Margin="0,5,0,5" Width="100" AcceptsReturn="True" MinHeight="40" TextWrapping="WrapWithOverflow"
                                                                IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                Height="Auto" Text="{Binding CJSQualifier, Mode=TwoWay}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                                <ListView.ContextMenu>
                                    <ContextMenu Name="ValueMenu" IsEnabled="{Binding Path=SelectedItem.FixedListViewModel.IsEnabled, Mode=OneWay}">
                                        <MenuItem Header="Add New Value" Command="{Binding Path=SelectedItem.FixedListViewModel.AddFixedListValueCommand}"/>
                                        <MenuItem Header="Delete Selected Value" Command="{Binding Path=SelectedItem.FixedListViewModel.DeleteFixedListValueCommand}"/>
                                    </ContextMenu>
                                </ListView.ContextMenu>
                            </ListView>
                        </StackPanel>
                        <Expander Header="Activity">
                            <StackPanel>
                                <ListView Margin="10,5,0,5" x:Name="fl_Comments"
                                            HorizontalAlignment="Left"
                                            Width="Auto"
                                            Height="Auto"
                                            MinHeight="100"
                                            MaxHeight="500"
                                            VerticalContentAlignment="Top"  
                                            ScrollViewer.VerticalScrollBarVisibility="Visible"
                                            ItemsSource="{Binding Path=SelectedItem.FixedListViewModel.AssociatedCommentsModel.Comments, Mode=OneWay, UpdateSourceTrigger=LostFocus}" 
                                            SelectedItem="{Binding Path=SelectedItem.FixedListViewModel.AssociatedCommentsModel.SelectedComment, Mode=TwoWay}">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Header="Comment" Width="610">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox Margin="0,5,0,5" Width="590" TextWrapping="WrapWithOverflow" AcceptsReturn="True"
                                                                    IsReadOnly="{Binding IsReadOnly, Mode=OneTime}"
                                                                    VerticalScrollBarVisibility="Auto" MaxHeight="250" Height="Auto" Text="{Binding Note, Mode=TwoWay}" />
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Made By" Width="Auto">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock VerticalAlignment="Top" Width="Auto" x:Name="madeby" Text="{Binding MadeBy, Mode=OneWay}" Margin="5,0,0,0" />
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                    <ListView.ContextMenu>
                                        <ContextMenu Name="fl_CommentsMenu" Visibility="{Binding Path=SelectedItem.FixedListViewModel.AssociatedCommentsModel.IsEnabled, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                            <MenuItem Header="Add New Comment" Command="{Binding Path=SelectedItem.FixedListViewModel.AssociatedCommentsModel.AddCommentCommand}"/>
                                            <MenuItem Header="Delete Selected Comment" Command="{Binding Path=SelectedItem.FixedListViewModel.AssociatedCommentsModel.DeleteCommentCommand}"/>
                                        </ContextMenu>
                                    </ListView.ContextMenu>
                                </ListView>
                            </StackPanel>
                        </Expander>
                        <Expander Header="Audit">
                            <StackPanel x:Name="flauditdates" Margin="10,5,0,0" Orientation="Vertical" IsEnabled="{Binding Path=SelectedItem.FixedListViewModel.IsEnabled, Mode=OneWay}">
                                <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                    <Label Margin="0,5,0,5" Width="200" >Created</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.FixedListViewModel.CreatedUser, Mode=OneWay}" />
                                    <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.FixedListViewModel.CreatedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                    <Label Margin="0,5,0,5" Width="200" >Modified</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.FixedListViewModel.LastModifiedUser, Mode=OneWay}" />
                                    <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.FixedListViewModel.LastModifiedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                    <Label Margin="0,5,0,5" Width="200" >Deleted</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.FixedListViewModel.DeletedUser, Mode=OneWay}" />
                                    <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.FixedListViewModel.DeletedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                    <Label Margin="0,5,0,5" Width="200" >Published Status</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.FixedListViewModel.PublishedStatus, Converter={StaticResource enumStringConverter}, Mode=OneWay}" />
                                    <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.FixedListViewModel.PublishedStatusDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Margin="0,0,0,0" Orientation="Horizontal" Visibility="{Binding Path=SelectedItem.FixedListViewModel.IsRevision, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                    <Label Margin="0,5,0,5" Width="200" >Original Date Published</Label>
                                    <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.FixedListViewModel.OriginalPublishedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Margin="0,5,0,5" Width="200">Publication Tags</Label>
                                    <ListView Margin="0,5,0,5" x:Name="fl_PublicationTags" 
                                    Visibility="{Binding Path=SelectedItem.FixedListViewModel.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" 
                                    ItemsSource="{Binding Path=SelectedItem.FixedListViewModel.PublicationTagsModel.AvailablePublicationTags, Mode=OneWay, UpdateSourceTrigger=LostFocus}" 
                                    SelectedItem="{Binding Path=SelectedItem.FixedListViewModel.PublicationTagsModel.SelectedAvailableTag, Mode=TwoWay}">
                                        <ListView.View>
                                            <GridView>
                                                <GridViewColumn Header="Available Tags" Width="250" DisplayMemberBinding="{Binding Path=., Mode=TwoWay}"/>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                    <StackPanel Orientation="Vertical" Margin="0,5,0,5" Visibility="{Binding Path=SelectedItem.FixedListViewModel.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Button Name="fl_btnAddPublicationTag" Height="30" Margin="15,10,15,5" Padding="8,0"  
                                        IsEnabled="{Binding Path=SelectedItem.FixedListViewModel.PublicationTagsModel.AddTagEnabled, FallbackValue=false}" 
                                        Command="{Binding Path=SelectedItem.FixedListViewModel.PublicationTagsModel.AddTagCommand}">Add >></Button>
                                        <Button Name="fl_btnRemovePublicationTag" Height="30" Margin="15,5,15,5" Padding="8,0" 
                                        IsEnabled="{Binding Path=SelectedItem.FixedListViewModel.PublicationTagsModel.RemoveTagEnabled, FallbackValue=false}" 
                                        Command="{Binding Path=SelectedItem.FixedListViewModel.PublicationTagsModel.RemoveTagCommand}">&lt;&lt; Remove</Button>
                                    </StackPanel>
                                    <ListView Margin="0,5,0,5" x:Name="fl_SelectedPublicationTags" 
                                    ItemsSource="{Binding Path=SelectedItem.FixedListViewModel.PublicationTagsModel.SelectedPublicationTags, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
                                    SelectedItem="{Binding Path=SelectedItem.FixedListViewModel.PublicationTagsModel.SelectedTag, Mode=TwoWay}">
                                        <ListView.View>
                                            <GridView >
                                                <GridViewColumn Header="Selected Tags" Width="250" DisplayMemberBinding="{Binding Path=., Mode=TwoWay}"/>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                </StackPanel>
                                <StackPanel Margin="200,0,0,0" 
                                        Orientation="Horizontal" 
                                        Visibility="{Binding Path=SelectedItem.FixedListViewModel.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                    <TextBox Margin="0,5,0,5" Width="250" 
                                            Text="{Binding Path=SelectedItem.FixedListViewModel.PublicationTagsModel.NewTag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <Button Name="fl_btnNewTag"
                                        IsEnabled="{Binding Path=SelectedItem.FixedListViewModel.PublicationTagsModel.AddNewTagEnabled, FallbackValue=false}" 
                                        HorizontalAlignment="Left" Height="30" Width="100" Margin="20,5,0,5" 
                                        Padding="8,0" Command="{Binding Path=SelectedItem.FixedListViewModel.PublicationTagsModel.AddNewTagCommand}">Add New Tag</Button>
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>

                <ScrollViewer Grid.Column="6" Grid.Row="0" Grid.RowSpan="2" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Visibility="{Binding SelectedResultDefinitionWordGroupVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                    <StackPanel Grid.Column="6" Grid.Row="0" Grid.RowSpan="2" Orientation="Vertical" Visibility="{Binding SelectedResultDefinitionWordGroupVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Name="resultDefinitionWordGroup" >
                        <Label  Height="30" Content="Result Definition Word Synonyms" FontWeight="SemiBold" Background="LightGray" IsEnabled="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.IsEnabled, Mode=OneWay}"/>
                        <Expander Header="Identifiers">
                            <StackPanel Margin="10,5,0,0">
                                <StackPanel Orientation="Horizontal" Visibility="Visible">
                                    <Label Margin="0,5,0,5" Width="200" IsEnabled="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.IsEnabled, Mode=OneWay}">Master Identifier</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="400" Text="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.MasterUUID, Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Visibility="Visible">
                                    <Label Margin="0,5,0,5" Width="200" IsEnabled="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.IsEnabled, Mode=OneWay}">Identifier</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="400" Text="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.UUID, Mode=OneWay}" />
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                        <Separator Height="2"/>
                        <StackPanel Orientation="Horizontal" IsEnabled="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.IsEnabled, Mode=OneWay}">
                            <Label Margin="0,5,0,5" Width="200">Result Definition Word</Label>
                            <TextBox Margin="0,5,0,5" Text="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.ResultDefinitionWord, Mode=TwoWay}" Width="300" />
                        </StackPanel>
                        <WrapPanel x:Name="rdwates" Margin="0,10,0,10" IsEnabled="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.IsEnabled, Mode=OneWay}">
                            <Label Margin="0,5,0,5" Width="200" >Start Date</Label>
                            <DatePicker Margin="0,5,0,5" SelectedDate="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.StartDate, Mode=TwoWay, TargetNullValue=''}" />
                            <Label Margin="10,5,0,5">End Date</Label>
                            <DatePicker Margin="0,5,0,5" SelectedDate="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.EndDate, Mode=TwoWay, TargetNullValue=''}" />
                        </WrapPanel>
                        <StackPanel Orientation="Horizontal" Margin="190,10,0,10">
                            <ListView Margin="10,5,0,5" x:Name="rdwg_Synonyms"
                                        HorizontalAlignment="Left"
                                        Width="Auto"
                                        Height="Auto"
                                        MinHeight="50"
                                        MaxHeight="500"                                  
                                        VerticalContentAlignment="Top"  
                                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                                        ItemsSource="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.Synonyms, Mode=OneWay, UpdateSourceTrigger=LostFocus}" 
                                        SelectedItem="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.SelectedSynonym, Mode=TwoWay}">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Synonyms" Width="200">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Margin="0,5,0,0" MinWidth="180" Width="Auto" AcceptsReturn="True"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                                Height="Auto" Text="{Binding Synonym, Mode=TwoWay}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                                <!--context  Menu-->
                                <ListView.ContextMenu>
                                    <ContextMenu Name="SynonymsMenu">
                                        <MenuItem Header="Add New Synonym" Command="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.AddSynonymCommand}"/>
                                        <MenuItem Header="Delete Selected Synonym" Command="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.DeleteSynonymCommand}"/>
                                    </ContextMenu>
                                </ListView.ContextMenu>
                            </ListView>
                        </StackPanel>
                        <Separator Height="2" />
                        <Expander Header="Activity">
                            <StackPanel>
                                <ListView Margin="10,5,0,5" x:Name="rdwg_Comments"
                                    HorizontalAlignment="Left"
                                    Width="Auto"
                                    Height="Auto"
                                    MinHeight="100"
                                    MaxHeight="500"
                                    VerticalContentAlignment="Top"  
                                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                                    ItemsSource="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.AssociatedCommentsModel.Comments, Mode=OneWay, UpdateSourceTrigger=LostFocus}" 
                                    SelectedItem="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.AssociatedCommentsModel.SelectedComment, Mode=TwoWay}">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Header="Comment" Width="610">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox Margin="0,5,0,5" Width="590" TextWrapping="WrapWithOverflow" AcceptsReturn="True"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneTime}"
                                                            VerticalScrollBarVisibility="Auto" MaxHeight="250" Height="Auto" Text="{Binding Note, Mode=TwoWay}" />
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Made By" Width="Auto">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock VerticalAlignment="Top" Width="Auto" x:Name="madeby" Text="{Binding MadeBy, Mode=OneWay}" Margin="5,0,0,0" />
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                    <ListView.ContextMenu>
                                        <ContextMenu Name="rdwg_CommentsMenu" Visibility="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.AssociatedCommentsModel.IsEnabled, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                            <MenuItem Header="Add New Comment" Command="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.AssociatedCommentsModel.AddCommentCommand}"/>
                                            <MenuItem Header="Delete Selected Comment" Command="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.AssociatedCommentsModel.DeleteCommentCommand}"/>
                                        </ContextMenu>
                                    </ListView.ContextMenu>
                                </ListView>
                            </StackPanel>
                        </Expander>
                        <Expander Header="Audit">
                            <StackPanel x:Name="rdwgAuditDates" Margin="10,5,0,0" Orientation="Vertical" IsEnabled="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.IsEnabled, Mode=OneWay}">
                                <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                    <Label Margin="0,5,0,5" Width="200" >Created</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.CreatedUser, Mode=OneWay}" />
                                    <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.CreatedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                    <Label Margin="0,5,0,5" Width="200" >Modified</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.LastModifiedUser, Mode=OneWay}" />
                                    <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.LastModifiedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                    <Label Margin="0,5,0,5" Width="200" >Deleted</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.DeletedUser, Mode=OneWay}" />
                                    <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.DeletedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                    <Label Margin="0,5,0,5" Width="200" >Published Status</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.PublishedStatus, Converter={StaticResource enumStringConverter}, Mode=OneWay}" />
                                    <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.PublishedStatusDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Margin="0,0,0,0" Orientation="Horizontal" Visibility="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.IsRevision, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                    <Label Margin="0,5,0,5" Width="200" >Original Date Published</Label>
                                    <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.OriginalPublishedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Margin="0,5,0,5" Width="200">Publication Tags</Label>
                                    <ListView Margin="0,5,0,5" x:Name="rdwg_PublicationTags" 
                            Visibility="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" 
                            ItemsSource="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.PublicationTagsModel.AvailablePublicationTags, Mode=OneWay, UpdateSourceTrigger=LostFocus}" 
                            SelectedItem="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.PublicationTagsModel.SelectedAvailableTag, Mode=TwoWay}">
                                        <ListView.View>
                                            <GridView>
                                                <GridViewColumn Header="Available Tags" Width="250" DisplayMemberBinding="{Binding Path=., Mode=TwoWay}"/>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                    <StackPanel Orientation="Vertical" Margin="0,5,0,5" Visibility="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Button Name="rdwg_btnAddPublicationTag" Height="30" Margin="15,10,15,5" Padding="8,0"  
                                IsEnabled="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.PublicationTagsModel.AddTagEnabled, FallbackValue=false}" 
                                Command="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.PublicationTagsModel.AddTagCommand}">Add >></Button>
                                        <Button Name="rdwg_btnRemovePublicationTag" Height="30" Margin="15,5,15,5" Padding="8,0" 
                                IsEnabled="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.PublicationTagsModel.RemoveTagEnabled, FallbackValue=false}" 
                                Command="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.PublicationTagsModel.RemoveTagCommand}">&lt;&lt; Remove</Button>
                                    </StackPanel>
                                    <ListView Margin="0,5,0,5" x:Name="rdwg_SelectedPublicationTags" 
                            ItemsSource="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.PublicationTagsModel.SelectedPublicationTags, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
                            SelectedItem="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.PublicationTagsModel.SelectedTag, Mode=TwoWay}">
                                        <ListView.View>
                                            <GridView >
                                                <GridViewColumn Header="Selected Tags" Width="250" DisplayMemberBinding="{Binding Path=., Mode=TwoWay}"/>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                </StackPanel>
                                <StackPanel Margin="200,0,0,0" 
                                Orientation="Horizontal" 
                                Visibility="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                    <TextBox Margin="0,5,0,5" Width="250" 
                                    Text="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.PublicationTagsModel.NewTag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <Button Name="rdwg_btnNewTag"
                                    IsEnabled="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.PublicationTagsModel.AddNewTagEnabled, FallbackValue=false}" 
                                    HorizontalAlignment="Left" Height="30" Width="100" Margin="20,5,0,5" 
                                    Padding="8,0" Command="{Binding Path=SelectedItem.ResultDefinitionWordGroupViewModel.PublicationTagsModel.AddNewTagCommand}">Add New Tag</Button>
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>

                <ScrollViewer Grid.Column="6" Grid.Row="0" Grid.RowSpan="2" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Visibility="{Binding SelectedResultPromptWordGroupVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" >
                    <StackPanel Grid.Column="6" Grid.Row="0" Grid.RowSpan="2" Orientation="Vertical" Visibility="{Binding SelectedResultPromptWordGroupVisibility, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Name="resultPromptWordGroup" >
                        <Label  Height="30" Content="Result Prompt Word Synonyms" FontWeight="SemiBold" Background="LightGray" />
                        <Expander Header="Identifiers">
                            <StackPanel Margin="10,5,0,0">
                                <StackPanel Orientation="Horizontal" Visibility="Visible">
                                    <Label Margin="0,5,0,5" Width="200" IsEnabled="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.IsEnabled, Mode=OneWay}">Master Identifier</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="400" Text="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.MasterUUID, Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Visibility="Visible">
                                    <Label Margin="0,5,0,5" Width="200" IsEnabled="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.IsEnabled, Mode=OneWay}">Identifier</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="400" Text="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.UUID, Mode=OneWay}" />
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                        <Separator Height="2"/>
                        <StackPanel Orientation="Horizontal">
                            <Label Margin="0,5,0,5" Width="200" IsEnabled="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.IsEnabled, Mode=OneWay}">Result Prompt Word</Label>
                            <TextBox Margin="0,5,0,5" IsEnabled="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.IsEnabled, Mode=OneWay}" Text="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.ResultPromptWord, Mode=TwoWay}" Width="300" />
                        </StackPanel>
                        <WrapPanel x:Name="rpwdates" Margin="0,10,0,10">
                            <Label Margin="0,5,0,5" IsEnabled="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.IsEnabled, Mode=OneWay}" Width="200" >Start Date</Label>
                            <DatePicker Margin="0,5,0,5" IsEnabled="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.IsEnabled, Mode=OneWay}" SelectedDate="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.StartDate, Mode=TwoWay, TargetNullValue=''}" />
                            <Label Margin="10,5,0,5" IsEnabled="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.IsEnabled, Mode=OneWay}">End Date</Label>
                            <DatePicker Margin="0,5,0,5" IsEnabled="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.IsEnabled, Mode=OneWay}" SelectedDate="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.EndDate, Mode=TwoWay, TargetNullValue=''}" />
                        </WrapPanel>
                        <StackPanel Orientation="Horizontal" Margin="190,10,0,10">
                            <ListView Margin="10,5,0,5" x:Name="rpwg_Synonyms"
                                    HorizontalAlignment="Left"
                                    Width="Auto"
                                    Height="Auto"
                                    MinHeight="50"
                                    MaxHeight="500"                                  
                                    VerticalContentAlignment="Top"  
                                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                                    ItemsSource="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.Synonyms, Mode=OneWay, UpdateSourceTrigger=LostFocus}" 
                                    SelectedItem="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.SelectedSynonym, Mode=TwoWay}">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Synonyms" Width="200">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Margin="0,5,0,0" MinWidth="180" Width="Auto" AcceptsReturn="True"
                                                        IsReadOnly="{Binding IsReadOnly, Mode=OneWay}"
                                                            Height="Auto" Text="{Binding Synonym, Mode=TwoWay}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                                <!--context  Menu-->
                                <ListView.ContextMenu>
                                    <ContextMenu Name="rp_SynonymsMenu" IsEnabled="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.IsEnabled, Mode=OneWay}">
                                        <MenuItem Header="Add New Synonym" Command="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.AddSynonymCommand}"/>
                                        <MenuItem Header="Delete Selected Synonym" Command="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.DeleteSynonymCommand}"/>
                                    </ContextMenu>
                                </ListView.ContextMenu>
                            </ListView>
                        </StackPanel>
                        <Separator Height="2" />
                        <Expander Header="Activity">
                            <StackPanel>
                                <ListView Margin="10,5,0,5" x:Name="rpwg_Comments"
                                    HorizontalAlignment="Left"
                                    Width="Auto"
                                    Height="Auto"
                                    MinHeight="100"
                                    MaxHeight="500"
                                    VerticalContentAlignment="Top"  
                                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                                    ItemsSource="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.AssociatedCommentsModel.Comments, Mode=OneWay, UpdateSourceTrigger=LostFocus}" 
                                    SelectedItem="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.AssociatedCommentsModel.SelectedComment, Mode=TwoWay}">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Header="Comment" Width="610">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox Margin="0,5,0,5" Width="590" TextWrapping="WrapWithOverflow" AcceptsReturn="True"
                                                            IsReadOnly="{Binding IsReadOnly, Mode=OneTime}"
                                                            VerticalScrollBarVisibility="Auto" MaxHeight="250" Height="Auto" Text="{Binding Note, Mode=TwoWay}" />
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header="Made By" Width="Auto">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock VerticalAlignment="Top" Width="Auto" x:Name="madeby" Text="{Binding MadeBy, Mode=OneWay}" Margin="5,0,0,0" />
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                    <ListView.ContextMenu>
                                        <ContextMenu Name="rpwg_CommentsMenu" Visibility="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.AssociatedCommentsModel.IsEnabled, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                            <MenuItem Header="Add New Comment" Command="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.AssociatedCommentsModel.AddCommentCommand}"/>
                                            <MenuItem Header="Delete Selected Comment" Command="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.AssociatedCommentsModel.DeleteCommentCommand}"/>
                                        </ContextMenu>
                                    </ListView.ContextMenu>
                                </ListView>
                            </StackPanel>
                        </Expander>
                        <Expander Header="Audit">
                            <StackPanel x:Name="rpwgauditdates" Margin="10,5,0,0" Orientation="Vertical" IsEnabled="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.IsEnabled, Mode=OneWay}">
                                <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                    <Label Margin="0,5,0,5" Width="200" >Created</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.CreatedUser, Mode=OneWay}" />
                                    <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.CreatedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                    <Label Margin="0,5,0,5" Width="200" >Modified</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.LastModifiedUser, Mode=OneWay}" />
                                    <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.LastModifiedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                    <Label Margin="0,5,0,5" Width="200" >Deleted</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.DeletedUser, Mode=OneWay}" />
                                    <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.DeletedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                                    <Label Margin="0,5,0,5" Width="200" >Published Status</Label>
                                    <TextBox Margin="0,5,0,5" IsReadOnly="True" Width="300" Text="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.PublishedStatus, Converter={StaticResource enumStringConverter}, Mode=OneWay}" />
                                    <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.PublishedStatusDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Margin="0,0,0,0" Orientation="Horizontal" Visibility="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.IsRevision, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                    <Label Margin="0,5,0,5" Width="200" >Original Date Published</Label>
                                    <TextBox Margin="10,5,0,5" IsReadOnly="True" Width="200" Text="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.OriginalPublishedDate, StringFormat='d MMM yyyy h:mm:ss tt', Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Margin="0,5,0,5" Width="200">Publication Tags</Label>
                                    <ListView Margin="0,5,0,5" x:Name="rpwg_PublicationTags" 
                                Visibility="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" 
                                ItemsSource="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.PublicationTagsModel.AvailablePublicationTags, Mode=OneWay, UpdateSourceTrigger=LostFocus}" 
                                SelectedItem="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.PublicationTagsModel.SelectedAvailableTag, Mode=TwoWay}">
                                        <ListView.View>
                                            <GridView>
                                                <GridViewColumn Header="Available Tags" Width="250" DisplayMemberBinding="{Binding Path=., Mode=TwoWay}"/>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                    <StackPanel Orientation="Vertical" Margin="0,5,0,5" Visibility="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                        <Button Name="rpwg_btnAddPublicationTag" Height="30" Margin="15,10,15,5" Padding="8,0"  
                                    IsEnabled="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.PublicationTagsModel.AddTagEnabled, FallbackValue=false}" 
                                    Command="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.PublicationTagsModel.AddTagCommand}">Add >></Button>
                                        <Button Name="rpwg_btnRemovePublicationTag" Height="30" Margin="15,5,15,5" Padding="8,0" 
                                    IsEnabled="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.PublicationTagsModel.RemoveTagEnabled, FallbackValue=false}" 
                                    Command="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.PublicationTagsModel.RemoveTagCommand}">&lt;&lt; Remove</Button>
                                    </StackPanel>
                                    <ListView Margin="0,5,0,5" x:Name="rpwg_SelectedPublicationTags" 
                            ItemsSource="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.PublicationTagsModel.SelectedPublicationTags, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
                            SelectedItem="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.PublicationTagsModel.SelectedTag, Mode=TwoWay}">
                                        <ListView.View>
                                            <GridView >
                                                <GridViewColumn Header="Selected Tags" Width="250" DisplayMemberBinding="{Binding Path=., Mode=TwoWay}"/>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                </StackPanel>
                                <StackPanel Margin="200,0,0,0" 
                                Orientation="Horizontal" 
                                Visibility="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.IsEnabled, Mode=OneWay, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}">
                                    <TextBox Margin="0,5,0,5" Width="250" 
                                    Text="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.PublicationTagsModel.NewTag, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <Button Name="rpwg_btnNewTag"
                                    IsEnabled="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.PublicationTagsModel.AddNewTagEnabled, FallbackValue=false}" 
                                    HorizontalAlignment="Left" Height="30" Width="100" Margin="20,5,0,5" 
                                    Padding="8,0" Command="{Binding Path=SelectedItem.ResultPromptWordGroupViewModel.PublicationTagsModel.AddNewTagCommand}">Add New Tag</Button>
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </Grid>
    </DockPanel>
</UserControl>
